{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [
        "bWmZItuPLGWK",
        "rKioa7o9thor",
        "YxkH-7dvWZ-l",
        "dPwKOuVoI7JI",
        "hI9rp7xH3qf9",
        "qM9W17VQaBeA",
        "u0veHXgSjqJX",
        "7CjvJ-F8lGm7",
        "q7xql8vnqDSd",
        "enKu06SOqHgi",
        "DxjCt3xbqJHT",
        "XiXBJwe5WGjn",
        "c8WzPXMSWz9f",
        "gNVo5eIqn27Z",
        "pml4ycrlqMBk",
        "C5Aac2ToqNc5",
        "iWX9taxvgenr"
      ],
      "authorship_tag": "ABX9TyNDCEkTdGzt0rPsrMKtHAUr"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "Here is the implementation of PCA and KPCA using PyOD and Scikit-learn"
      ],
      "metadata": {
        "id": "ztm0GcIWBT6G"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 01 *ANOMALY* DETECTION\n"
      ],
      "metadata": {
        "id": "bWmZItuPLGWK"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "References PCA,KPCA: \n",
        "1. https://medium.com/dataman-in-ai/handbook-of-anomaly-detection-with-python-outlier-detection-5-pca-d1acbdba1b7e\n",
        "2. https://github.com/dataman-git/codes_for_articles/blob/master/05.%20PCA.ipynb\n",
        "3. https://www.datatechnotes.com/2022/01/kernelpca-projection-example-in-python.html\n",
        "4. https://github.com/JAVI897/Kernel-PCA\n",
        "5. https://colab.research.google.com/drive/1rrEw6pxir1ilV2XE6U8BuTOtUMyGFjmF?usp=sharing#scrollTo=l-jnnCHShoFm\n",
        "6. https://pyod.readthedocs.io/en/latest/pyod.models.html\n",
        "7. https://scikit-learn.org/stable/auto_examples/decomposition/plot_kernel_pca.html#sphx-glr-auto-examples-decomposition-plot-kernel-pca-py\n",
        "8. https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.KernelPCA.html#sklearn.decomposition.KernelPCA.inverse_transform\n",
        "9. https://scikit-learn.org/stable/modules/decomposition.html#bakir2003\n",
        "10. https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.StandardScaler.html\n",
        "11. https://github.com/yzhao062/pyod/blob/master/pyod/models/kpca.py\n",
        "12. https://github.com/yzhao062/pyod/blob/master/pyod/models/pca.py\n",
        "13. https://hub.gke2.mybinder.org/user/scikit-learn-scikit-learn-t3cqyeel/lab/tree/notebooks/auto_examples/decomposition/plot_kernel_pca.ipynb\n",
        "\n",
        "\n",
        "DATASETS:\n",
        "1. https://archive.ics.uci.edu/ml/datasets/HTRU2#\n",
        "2. https://archive.ics.uci.edu/ml/datasets/Lymphography\n",
        "\n",
        "Next DATASETS:\n",
        "1. https://keras.io/api/datasets/\n",
        "2. http://odds.cs.stonybrook.edu/\n",
        "3. https://archive.ics.uci.edu/ml/datasets/\n",
        "\n",
        "\n",
        "Maybe we should try this implementation:\n",
        "1. https://scikit-learn.org/stable/auto_examples/decomposition/plot_kernel_pca.html#sphx-glr-auto-examples-decomposition-plot-kernel-pca-py\n",
        "2. https://www.section.io/engineering-education/kernel-pca-in-python/\n",
        "\n",
        "\n",
        "Questions:\n",
        "1. *Is the plots correct? *\n",
        "2. *Standardize the data *\n",
        "3. "
      ],
      "metadata": {
        "id": "fcDSUUaFW33x"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 02 **Import Libraries**"
      ],
      "metadata": {
        "id": "rKioa7o9thor"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Import the necessary libraries.\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from numpy import reshape\n",
        "import os\n",
        "import matplotlib.pyplot as plt\n",
        "from matplotlib.colors import ListedColormap\n",
        "import seaborn as sns\n",
        "\n",
        "!pip install pyod            # normal install\n",
        "!pip install --upgrade pyod  # or update if needed\n",
        "from pyod.models.pca import PCA as PCA_PYOD\n",
        "from pyod.models.kpca import KPCA as KPCA_PYOD\n",
        "from sklearn.decomposition import PCA, KernelPCA\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "\n",
        "from pyod.utils.data import evaluate_print\n",
        "from pyod.utils.example import visualize\n",
        "from scipy.io import loadmat\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import ConfusionMatrixDisplay, confusion_matrix, f1_score, accuracy_score\n",
        "from sklearn.metrics import confusion_matrix, classification_report, accuracy_score\n",
        "\n",
        "from keras.datasets import mnist\n",
        "from sklearn.datasets import load_iris, load_breast_cancer\n",
        "\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "scaler = StandardScaler()"
      ],
      "metadata": {
        "id": "16x57uiyvL2x",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a3e4300c-75d0-4e11-891a-232def2d8e8e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: pyod in /usr/local/lib/python3.10/dist-packages (1.0.9)\n",
            "Requirement already satisfied: joblib in /usr/local/lib/python3.10/dist-packages (from pyod) (1.2.0)\n",
            "Requirement already satisfied: numba>=0.51 in /usr/local/lib/python3.10/dist-packages (from pyod) (0.56.4)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from pyod) (1.16.0)\n",
            "Requirement already satisfied: scikit-learn>=0.20.0 in /usr/local/lib/python3.10/dist-packages (from pyod) (1.2.2)\n",
            "Requirement already satisfied: scipy>=1.5.1 in /usr/local/lib/python3.10/dist-packages (from pyod) (1.10.1)\n",
            "Requirement already satisfied: numpy>=1.19 in /usr/local/lib/python3.10/dist-packages (from pyod) (1.22.4)\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from pyod) (3.7.1)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from numba>=0.51->pyod) (67.7.2)\n",
            "Requirement already satisfied: llvmlite<0.40,>=0.39.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba>=0.51->pyod) (0.39.1)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.20.0->pyod) (3.1.0)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (3.0.9)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (1.4.4)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (4.39.3)\n",
            "Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (8.4.0)\n",
            "Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (2.8.2)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (1.0.7)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (0.11.0)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (23.1)\n",
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: pyod in /usr/local/lib/python3.10/dist-packages (1.0.9)\n",
            "Requirement already satisfied: numpy>=1.19 in /usr/local/lib/python3.10/dist-packages (from pyod) (1.22.4)\n",
            "Requirement already satisfied: numba>=0.51 in /usr/local/lib/python3.10/dist-packages (from pyod) (0.56.4)\n",
            "Requirement already satisfied: joblib in /usr/local/lib/python3.10/dist-packages (from pyod) (1.2.0)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from pyod) (1.16.0)\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from pyod) (3.7.1)\n",
            "Requirement already satisfied: scipy>=1.5.1 in /usr/local/lib/python3.10/dist-packages (from pyod) (1.10.1)\n",
            "Requirement already satisfied: scikit-learn>=0.20.0 in /usr/local/lib/python3.10/dist-packages (from pyod) (1.2.2)\n",
            "Requirement already satisfied: llvmlite<0.40,>=0.39.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba>=0.51->pyod) (0.39.1)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from numba>=0.51->pyod) (67.7.2)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.20.0->pyod) (3.1.0)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (3.0.9)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (1.4.4)\n",
            "Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (2.8.2)\n",
            "Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (8.4.0)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (23.1)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (4.39.3)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (1.0.7)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->pyod) (0.11.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# For working in google_colab\n",
        "from google.colab import drive\n",
        "drive.mount('/content/drive')\n",
        "\n",
        "# Add the folder to your google drive account to run it and change the directory path.\n",
        "# You can also add Datasets to try it.\n",
        "# LINK of Datasets: https://drive.google.com/drive/folders/12K1jIqNfU_yVOSdn_pqOX9kIVAgLRFPg?usp=sharing"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ISAH1C3VvK0V",
        "outputId": "d9d03258-63fc-4ecc-97f5-352322ec61e1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 03 **Load Datasets**"
      ],
      "metadata": {
        "id": "YxkH-7dvWZ-l"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Save all datasets\n",
        "directory_path = \"/content/drive/MyDrive/KPCA_PCA/datasets/\"\n",
        "dataset_ex = ['.csv', '.data', '.mat', '.xls' ]\n",
        "datasets = [f for f in os.listdir(directory_path) if ( f.endswith('.data') or f.endswith('.csv') or f.endswith('.mat') or f.endswith('.xls')) and f not in dataset_ex]\n",
        "datasets"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NK03Zc71Wjfd",
        "outputId": "349f7ca4-1c99-4439-8ce5-951c932dc8e0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['HTRU_2.csv',\n",
              " 'lymphography.data',\n",
              " 'musk.mat',\n",
              " 'cardio.mat',\n",
              " 'mnist.mat',\n",
              " 'bupa.data',\n",
              " 'badges.data',\n",
              " 'vowel-context.data',\n",
              " 'arrhythmia.data',\n",
              " 'doccc.xls',\n",
              " 'cancer.csv']"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 04 **Our Datasets**\n",
        "Run only one and then continue"
      ],
      "metadata": {
        "id": "BrWcw__lKZs0"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **HTRU2 dataset**\n",
        "\n"
      ],
      "metadata": {
        "id": "dPwKOuVoI7JI"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "17,898 total examples.\n",
        "1,639 positive examples. as outliers\n",
        "16,259 negative examples. as inliers\n",
        "\n",
        "1. Mean of the integrated profile.\n",
        "2. Standard deviation of the integrated profile.\n",
        "3. Excess kurtosis of the integrated profile.\n",
        "4. Skewness of the integrated profile.\n",
        "5. Mean of the DM-SNR curve.\n",
        "6. Standard deviation of the DM-SNR curve.\n",
        "7. Excess kurtosis of the DM-SNR curve.\n",
        "8. Skewness of the DM-SNR curve.\n",
        "9. Class"
      ],
      "metadata": {
        "id": "DjJWNs08tuNM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataset = datasets[0]\n",
        "df = pd.read_csv(directory_path + dataset, header=None)\n",
        "X = df.iloc[:, :-1].values\n",
        "y = df.iloc[:, -1].values\n",
        "X = scaler.fit_transform(X)"
      ],
      "metadata": {
        "id": "WVvnC53lpOUS"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "counts = df[8].value_counts()\n",
        "contamination = counts[1]/(counts[0] + counts[1])  # percentage of outliers\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, test_size=0.3, random_state=42)\n",
        "\n",
        "X_train_pd = pd.DataFrame(X_train)\n",
        "X_train_pd.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "w7WXBORNuRd2",
        "outputId": "c92c89fc-46dc-4063-c424-01b5de5f3bb1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          0         1         2         3         4         5         6  \\\n",
              "0  0.062971  1.162648 -0.171862 -0.348320 -0.386677 -0.676617  0.955283   \n",
              "1 -0.773031 -0.710930  0.015077 -0.124191 -0.238614 -0.091203 -0.782211   \n",
              "2 -0.364015 -0.279495 -0.157062 -0.191103 -0.333228 -0.421810  0.119655   \n",
              "3  1.634777 -0.235911 -0.733803 -0.225069 -0.346732 -0.565516  0.189013   \n",
              "4 -1.362344 -0.935907  0.370858  0.047962 -0.379840 -0.520631  0.826682   \n",
              "\n",
              "          7  \n",
              "0  0.715130  \n",
              "1 -0.752064  \n",
              "2 -0.140943  \n",
              "3  0.020776  \n",
              "4  0.414455  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e6a8815f-760e-4f8d-bc15-588e3ab5213f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.062971</td>\n",
              "      <td>1.162648</td>\n",
              "      <td>-0.171862</td>\n",
              "      <td>-0.348320</td>\n",
              "      <td>-0.386677</td>\n",
              "      <td>-0.676617</td>\n",
              "      <td>0.955283</td>\n",
              "      <td>0.715130</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-0.773031</td>\n",
              "      <td>-0.710930</td>\n",
              "      <td>0.015077</td>\n",
              "      <td>-0.124191</td>\n",
              "      <td>-0.238614</td>\n",
              "      <td>-0.091203</td>\n",
              "      <td>-0.782211</td>\n",
              "      <td>-0.752064</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-0.364015</td>\n",
              "      <td>-0.279495</td>\n",
              "      <td>-0.157062</td>\n",
              "      <td>-0.191103</td>\n",
              "      <td>-0.333228</td>\n",
              "      <td>-0.421810</td>\n",
              "      <td>0.119655</td>\n",
              "      <td>-0.140943</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.634777</td>\n",
              "      <td>-0.235911</td>\n",
              "      <td>-0.733803</td>\n",
              "      <td>-0.225069</td>\n",
              "      <td>-0.346732</td>\n",
              "      <td>-0.565516</td>\n",
              "      <td>0.189013</td>\n",
              "      <td>0.020776</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-1.362344</td>\n",
              "      <td>-0.935907</td>\n",
              "      <td>0.370858</td>\n",
              "      <td>0.047962</td>\n",
              "      <td>-0.379840</td>\n",
              "      <td>-0.520631</td>\n",
              "      <td>0.826682</td>\n",
              "      <td>0.414455</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e6a8815f-760e-4f8d-bc15-588e3ab5213f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e6a8815f-760e-4f8d-bc15-588e3ab5213f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e6a8815f-760e-4f8d-bc15-588e3ab5213f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 165
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Lymphography dataset**\n"
      ],
      "metadata": {
        "id": "hI9rp7xH3qf9"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Data Set Information:\n",
        "\n",
        "This is one of three domains provided by the Oncology Institute that has repeatedly appeared in the machine learning literature. (See also breast-cancer and primary-tumor.)\n",
        "\n",
        "\n",
        "Attribute Information:\n",
        "\n",
        "--- NOTE: All attribute values in the database have been entered as numeric values corresponding to their index in the list of attribute values for that attribute domain as given below.\n",
        "1. class: normal find, metastases, malign lymph, fibrosis\n",
        "2. lymphatics: normal, arched, deformed, displaced\n",
        "3. block of affere: no, yes\n",
        "4. bl. of lymph. c: no, yes\n",
        "5. bl. of lymph. s: no, yes\n",
        "6. by pass: no, yes\n",
        "7. extravasates: no, yes\n",
        "8. regeneration of: no, yes\n",
        "9. early uptake in: no, yes\n",
        "10. lym.nodes dimin: 0-3\n",
        "11. lym.nodes enlar: 1-4\n",
        "12. changes in lym.: bean, oval, round\n",
        "13. defect in node: no, lacunar, lac. marginal, lac. central\n",
        "14. changes in node: no, lacunar, lac. margin, lac. central\n",
        "15. changes in stru: no, grainy, drop-like, coarse, diluted, reticular, stripped, faint,\n",
        "16. special forms: no, chalices, vesicles\n",
        "17. dislocation of: no, yes\n",
        "18. exclusion of no: no, yes\n",
        "19. no. of nodes in: 0-9, 10-19, 20-29, 30-39, 40-49, 50-59, 60-69, >=70"
      ],
      "metadata": {
        "id": "HdamJDdPtx8E"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Class Distribution:\n",
        "Class:        Number of Instances:\n",
        "\n",
        "    1. normal find:  2\n",
        "    2. metastases:   81\n",
        "    3. malign lymph: 61\n",
        "    4. fibrosis:     4\n",
        "The original lymphography dataset from UCI machine learning repository is a classification dataset. It is a multi-class dataset having four classes, but two of them are quite small (2 and 4 data records). Therefore, those two small classes are merged and considered as outliers compared to other two large classes (81 and 61 data records)."
      ],
      "metadata": {
        "id": "n9bVHUR24BtQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataset = datasets[1]\n",
        "df = pd.read_csv(directory_path + dataset, header=None)\n",
        "X = df.iloc[:, 1:].values\n",
        "X = scaler.fit_transform(X)\n",
        "\n",
        "df['target'] = df.iloc[:, 0].replace({4: 1, 1: 1, 3: 0, 2: 0})\n",
        "y = df.iloc[:, -1].values\n",
        "y\n",
        "\n",
        "counts = df['target'].value_counts()\n",
        "contamination = counts[1]/(counts[0] +counts[1])  # percentage of outliers\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, test_size=0.3, random_state=42)\n",
        "\n",
        "X_train_pd = pd.DataFrame(X_train)\n",
        "X_train_pd.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "01_o61lS7PbQ",
        "outputId": "1c48ef21-da0e-47a2-9d9d-973db9210969"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         0         1         2         3         4         5         6   \\\n",
              "0  1.542520  0.897150  2.166174  4.488079  1.763834  0.986577  3.714835   \n",
              "1 -0.912243 -1.114641 -0.461644 -0.222812 -0.566947 -1.013606 -0.269191   \n",
              "2  1.542520 -1.114641 -0.461644 -0.222812 -0.566947 -1.013606 -0.269191   \n",
              "3  0.315138 -1.114641 -0.461644 -0.222812 -0.566947 -1.013606 -0.269191   \n",
              "4  1.542520  0.897150 -0.461644 -0.222812  1.763834  0.986577 -0.269191   \n",
              "\n",
              "         7         8         9         10       11        12        13  \\\n",
              "0  0.650444 -0.194597  1.831416  1.061708  1.19462  1.575155  0.824292   \n",
              "1  0.650444 -0.194597 -0.567253 -0.703829 -1.11654 -1.059002 -0.562017   \n",
              "2 -1.537412  3.005449 -1.766587  1.061708  1.19462 -1.059002  1.286395   \n",
              "3 -1.537412 -0.194597 -0.567253 -0.703829 -1.11654 -1.059002 -0.099914   \n",
              "4  0.650444 -0.194597  0.632082  1.061708  1.19462 -1.059002 -0.099914   \n",
              "\n",
              "         14        15        16        17  \n",
              "0  0.863682  0.714286  0.514740  2.843524  \n",
              "1 -1.718641  0.714286 -1.942728 -0.316738  \n",
              "2 -1.718641  0.714286  0.514740 -0.843448  \n",
              "3 -1.718641 -1.400000  0.514740 -0.316738  \n",
              "4  0.863682  0.714286  0.514740  0.209972  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b5126ea8-0a29-4739-bf73-62099385b99b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>10</th>\n",
              "      <th>11</th>\n",
              "      <th>12</th>\n",
              "      <th>13</th>\n",
              "      <th>14</th>\n",
              "      <th>15</th>\n",
              "      <th>16</th>\n",
              "      <th>17</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.542520</td>\n",
              "      <td>0.897150</td>\n",
              "      <td>2.166174</td>\n",
              "      <td>4.488079</td>\n",
              "      <td>1.763834</td>\n",
              "      <td>0.986577</td>\n",
              "      <td>3.714835</td>\n",
              "      <td>0.650444</td>\n",
              "      <td>-0.194597</td>\n",
              "      <td>1.831416</td>\n",
              "      <td>1.061708</td>\n",
              "      <td>1.19462</td>\n",
              "      <td>1.575155</td>\n",
              "      <td>0.824292</td>\n",
              "      <td>0.863682</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>0.514740</td>\n",
              "      <td>2.843524</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-0.912243</td>\n",
              "      <td>-1.114641</td>\n",
              "      <td>-0.461644</td>\n",
              "      <td>-0.222812</td>\n",
              "      <td>-0.566947</td>\n",
              "      <td>-1.013606</td>\n",
              "      <td>-0.269191</td>\n",
              "      <td>0.650444</td>\n",
              "      <td>-0.194597</td>\n",
              "      <td>-0.567253</td>\n",
              "      <td>-0.703829</td>\n",
              "      <td>-1.11654</td>\n",
              "      <td>-1.059002</td>\n",
              "      <td>-0.562017</td>\n",
              "      <td>-1.718641</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>-1.942728</td>\n",
              "      <td>-0.316738</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.542520</td>\n",
              "      <td>-1.114641</td>\n",
              "      <td>-0.461644</td>\n",
              "      <td>-0.222812</td>\n",
              "      <td>-0.566947</td>\n",
              "      <td>-1.013606</td>\n",
              "      <td>-0.269191</td>\n",
              "      <td>-1.537412</td>\n",
              "      <td>3.005449</td>\n",
              "      <td>-1.766587</td>\n",
              "      <td>1.061708</td>\n",
              "      <td>1.19462</td>\n",
              "      <td>-1.059002</td>\n",
              "      <td>1.286395</td>\n",
              "      <td>-1.718641</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>0.514740</td>\n",
              "      <td>-0.843448</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.315138</td>\n",
              "      <td>-1.114641</td>\n",
              "      <td>-0.461644</td>\n",
              "      <td>-0.222812</td>\n",
              "      <td>-0.566947</td>\n",
              "      <td>-1.013606</td>\n",
              "      <td>-0.269191</td>\n",
              "      <td>-1.537412</td>\n",
              "      <td>-0.194597</td>\n",
              "      <td>-0.567253</td>\n",
              "      <td>-0.703829</td>\n",
              "      <td>-1.11654</td>\n",
              "      <td>-1.059002</td>\n",
              "      <td>-0.099914</td>\n",
              "      <td>-1.718641</td>\n",
              "      <td>-1.400000</td>\n",
              "      <td>0.514740</td>\n",
              "      <td>-0.316738</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1.542520</td>\n",
              "      <td>0.897150</td>\n",
              "      <td>-0.461644</td>\n",
              "      <td>-0.222812</td>\n",
              "      <td>1.763834</td>\n",
              "      <td>0.986577</td>\n",
              "      <td>-0.269191</td>\n",
              "      <td>0.650444</td>\n",
              "      <td>-0.194597</td>\n",
              "      <td>0.632082</td>\n",
              "      <td>1.061708</td>\n",
              "      <td>1.19462</td>\n",
              "      <td>-1.059002</td>\n",
              "      <td>-0.099914</td>\n",
              "      <td>0.863682</td>\n",
              "      <td>0.714286</td>\n",
              "      <td>0.514740</td>\n",
              "      <td>0.209972</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b5126ea8-0a29-4739-bf73-62099385b99b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b5126ea8-0a29-4739-bf73-62099385b99b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b5126ea8-0a29-4739-bf73-62099385b99b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 136
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Musk dataset**\n"
      ],
      "metadata": {
        "id": "qM9W17VQaBeA"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Dataset information:\n",
        "\n",
        "The original musk dataset from UCI machine learning repository contains several musk and non-musk classes. The non-musk classes j146, j147, and 252 are combined to form the inliers, while the musk classes 213 and 211 are added as outliers without downsampling. Other classes are discarded. "
      ],
      "metadata": {
        "id": "NomYVLFet0hE"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataset = datasets[3]\n",
        "data = loadmat(directory_path + dataset)\n",
        "df = pd.DataFrame(data['X'])\n",
        "df['target'] = data['y']"
      ],
      "metadata": {
        "id": "9j_Zrk78aAi8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data['X'].shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "H7oAx9nBf7px",
        "outputId": "59a6a272-711e-4d10-f23a-e6107cca3e61"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1831, 21)"
            ]
          },
          "metadata": {},
          "execution_count": 615
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X = df.iloc[:, :-1].values\n",
        "y = df.iloc[:, -1].values\n",
        "X = scaler.fit_transform(X)\n",
        "\n",
        "counts = df['target'].value_counts()\n",
        "contamination = counts[1]/(counts[0] +counts[1])  # percentage of outliers\n",
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, test_size=0.3, random_state=42)\n",
        "X_train_pd = pd.DataFrame(X_train)\n",
        "X_train_pd.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "O48wDVKGcky3",
        "outputId": "507dc749-71fa-4737-a527-3234e016499e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         0         1         2         3         4         5         6   \\\n",
              "0  0.639989 -0.920240 -0.203696 -0.359548 -0.683785 -0.061417 -0.278371   \n",
              "1  1.169219 -0.386622  0.886311 -1.267294  2.059859 -0.061417 -0.278371   \n",
              "2  0.957527  0.046391 -0.203696 -1.636318 -0.683785 -0.061417 -0.278371   \n",
              "3  0.639989  2.638048 -0.203696  0.414298 -0.683785 -0.061417 -0.278371   \n",
              "4 -0.736008 -0.443454 -0.203696  0.012292 -0.683785 -0.061417 -0.278371   \n",
              "\n",
              "         7         8         9   ...        11        12        13        14  \\\n",
              "0 -0.334376 -0.746689  0.201971  ... -1.347365  1.447146 -0.565488 -0.753601   \n",
              "1  1.161670  2.728624 -0.420602  ...  1.830666 -0.834241  2.515431  1.999203   \n",
              "2  0.024675 -0.399158 -0.420602  ...  0.691871 -0.727301  0.314774 -1.097701   \n",
              "3  0.383726 -0.630846 -0.420602  ... -0.658792  1.126326  0.369791 -0.753601   \n",
              "4 -0.274534 -0.862533  0.139713  ... -1.188464  1.126326 -0.730538 -1.097701   \n",
              "\n",
              "         15        16        17        18        19        20  \n",
              "0 -0.488412  0.361679  0.512494  0.438519 -0.657369 -0.493429  \n",
              "1  2.415104  0.542075 -1.403472  0.852436  0.946285 -0.493429  \n",
              "2 -0.488412  1.023131  1.151149  1.059394 -0.456912  1.140329  \n",
              "3 -0.488412  0.662339  1.023418  0.852436 -0.523731 -0.493429  \n",
              "4 -0.488412 -0.299773 -0.062296 -0.320328 -0.623959 -2.127186  \n",
              "\n",
              "[5 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c9b7df7f-a8bd-4bc6-bcd8-057d8554a76a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>...</th>\n",
              "      <th>11</th>\n",
              "      <th>12</th>\n",
              "      <th>13</th>\n",
              "      <th>14</th>\n",
              "      <th>15</th>\n",
              "      <th>16</th>\n",
              "      <th>17</th>\n",
              "      <th>18</th>\n",
              "      <th>19</th>\n",
              "      <th>20</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.639989</td>\n",
              "      <td>-0.920240</td>\n",
              "      <td>-0.203696</td>\n",
              "      <td>-0.359548</td>\n",
              "      <td>-0.683785</td>\n",
              "      <td>-0.061417</td>\n",
              "      <td>-0.278371</td>\n",
              "      <td>-0.334376</td>\n",
              "      <td>-0.746689</td>\n",
              "      <td>0.201971</td>\n",
              "      <td>...</td>\n",
              "      <td>-1.347365</td>\n",
              "      <td>1.447146</td>\n",
              "      <td>-0.565488</td>\n",
              "      <td>-0.753601</td>\n",
              "      <td>-0.488412</td>\n",
              "      <td>0.361679</td>\n",
              "      <td>0.512494</td>\n",
              "      <td>0.438519</td>\n",
              "      <td>-0.657369</td>\n",
              "      <td>-0.493429</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.169219</td>\n",
              "      <td>-0.386622</td>\n",
              "      <td>0.886311</td>\n",
              "      <td>-1.267294</td>\n",
              "      <td>2.059859</td>\n",
              "      <td>-0.061417</td>\n",
              "      <td>-0.278371</td>\n",
              "      <td>1.161670</td>\n",
              "      <td>2.728624</td>\n",
              "      <td>-0.420602</td>\n",
              "      <td>...</td>\n",
              "      <td>1.830666</td>\n",
              "      <td>-0.834241</td>\n",
              "      <td>2.515431</td>\n",
              "      <td>1.999203</td>\n",
              "      <td>2.415104</td>\n",
              "      <td>0.542075</td>\n",
              "      <td>-1.403472</td>\n",
              "      <td>0.852436</td>\n",
              "      <td>0.946285</td>\n",
              "      <td>-0.493429</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.957527</td>\n",
              "      <td>0.046391</td>\n",
              "      <td>-0.203696</td>\n",
              "      <td>-1.636318</td>\n",
              "      <td>-0.683785</td>\n",
              "      <td>-0.061417</td>\n",
              "      <td>-0.278371</td>\n",
              "      <td>0.024675</td>\n",
              "      <td>-0.399158</td>\n",
              "      <td>-0.420602</td>\n",
              "      <td>...</td>\n",
              "      <td>0.691871</td>\n",
              "      <td>-0.727301</td>\n",
              "      <td>0.314774</td>\n",
              "      <td>-1.097701</td>\n",
              "      <td>-0.488412</td>\n",
              "      <td>1.023131</td>\n",
              "      <td>1.151149</td>\n",
              "      <td>1.059394</td>\n",
              "      <td>-0.456912</td>\n",
              "      <td>1.140329</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.639989</td>\n",
              "      <td>2.638048</td>\n",
              "      <td>-0.203696</td>\n",
              "      <td>0.414298</td>\n",
              "      <td>-0.683785</td>\n",
              "      <td>-0.061417</td>\n",
              "      <td>-0.278371</td>\n",
              "      <td>0.383726</td>\n",
              "      <td>-0.630846</td>\n",
              "      <td>-0.420602</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.658792</td>\n",
              "      <td>1.126326</td>\n",
              "      <td>0.369791</td>\n",
              "      <td>-0.753601</td>\n",
              "      <td>-0.488412</td>\n",
              "      <td>0.662339</td>\n",
              "      <td>1.023418</td>\n",
              "      <td>0.852436</td>\n",
              "      <td>-0.523731</td>\n",
              "      <td>-0.493429</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-0.736008</td>\n",
              "      <td>-0.443454</td>\n",
              "      <td>-0.203696</td>\n",
              "      <td>0.012292</td>\n",
              "      <td>-0.683785</td>\n",
              "      <td>-0.061417</td>\n",
              "      <td>-0.278371</td>\n",
              "      <td>-0.274534</td>\n",
              "      <td>-0.862533</td>\n",
              "      <td>0.139713</td>\n",
              "      <td>...</td>\n",
              "      <td>-1.188464</td>\n",
              "      <td>1.126326</td>\n",
              "      <td>-0.730538</td>\n",
              "      <td>-1.097701</td>\n",
              "      <td>-0.488412</td>\n",
              "      <td>-0.299773</td>\n",
              "      <td>-0.062296</td>\n",
              "      <td>-0.320328</td>\n",
              "      <td>-0.623959</td>\n",
              "      <td>-2.127186</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 21 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c9b7df7f-a8bd-4bc6-bcd8-057d8554a76a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c9b7df7f-a8bd-4bc6-bcd8-057d8554a76a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c9b7df7f-a8bd-4bc6-bcd8-057d8554a76a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 616
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Iris dataset**\n",
        "Is not one class"
      ],
      "metadata": {
        "id": "u0veHXgSjqJX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "iris = load_iris()\n",
        "X = iris.data\n",
        "y = iris.target\n",
        "X = scaler.fit_transform(X)"
      ],
      "metadata": {
        "id": "W-ZwP8SMjqQr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "counts = df['target'].value_counts()\n",
        "contamination = counts[1]/(counts[0] +counts[1])  # percentage of outliers\n",
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, test_size=0.3, random_state=42)\n",
        "\n",
        "X_train_pd = pd.DataFrame(X_train)\n",
        "X_train_pd.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "Y_Bhb3LrkCO3",
        "outputId": "02c8b53f-8cdf-4868-c204-9734131f943b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          0         1         2         3\n",
              "0 -0.900681 -1.282963 -0.430828 -0.130755\n",
              "1  0.432165 -1.973554  0.421734  0.395774\n",
              "2 -0.900681  1.709595 -1.283389 -1.183812\n",
              "3  1.159173  0.328414  1.217458  1.448832\n",
              "4 -0.173674 -0.592373  0.194384  0.132510"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-583389e3-174e-4b25-9b26-1c1539d8adb0\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-0.900681</td>\n",
              "      <td>-1.282963</td>\n",
              "      <td>-0.430828</td>\n",
              "      <td>-0.130755</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.432165</td>\n",
              "      <td>-1.973554</td>\n",
              "      <td>0.421734</td>\n",
              "      <td>0.395774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-0.900681</td>\n",
              "      <td>1.709595</td>\n",
              "      <td>-1.283389</td>\n",
              "      <td>-1.183812</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.159173</td>\n",
              "      <td>0.328414</td>\n",
              "      <td>1.217458</td>\n",
              "      <td>1.448832</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-0.173674</td>\n",
              "      <td>-0.592373</td>\n",
              "      <td>0.194384</td>\n",
              "      <td>0.132510</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-583389e3-174e-4b25-9b26-1c1539d8adb0')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-583389e3-174e-4b25-9b26-1c1539d8adb0 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-583389e3-174e-4b25-9b26-1c1539d8adb0');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 618
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **MNIST dataset**"
      ],
      "metadata": {
        "id": "7CjvJ-F8lGm7"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataset = datasets[4]\n",
        "data = loadmat(directory_path + dataset)\n",
        "df = pd.DataFrame(data['X'])\n",
        "df['target'] = data['y']\n",
        "df"
      ],
      "metadata": {
        "id": "NWtnCZvtlG6h",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c9c22f2c-7291-4d87-bed5-8a8831e7abe3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           0           1           2    3          4       5    6         7  \\\n",
              "0    -0.0036  -73.804153  198.205963  0.0 -13.124617 -1.1501  0.0 -0.141633   \n",
              "1    -0.0036  -73.804153  197.205963  0.0 -13.124617 -1.1501  0.0 -0.141633   \n",
              "2    -0.0036  -73.804153  -53.794033  0.0 -13.124617 -1.1501  0.0 -0.141633   \n",
              "3    -0.0036  -73.804153   86.205963  0.0 -13.124617 -1.1501  0.0 -0.141633   \n",
              "4    -0.0036  -27.804153  199.205963  0.0 -13.124617 -1.1501  0.0 -0.141633   \n",
              "...      ...         ...         ...  ...        ...     ...  ...       ...   \n",
              "7598 -0.0036  179.195847    0.205967  0.0 -13.124617 -1.1501  0.0 -0.141633   \n",
              "7599 -0.0036  -73.804153  -53.794033  0.0  29.875383 -1.1501  0.0 -0.141633   \n",
              "7600 -0.0036  -73.804153  -53.794033  0.0 -13.124617 -1.1501  0.0 -0.141633   \n",
              "7601 -0.0036  -73.804153  -53.794033  0.0  19.875383 -1.1501  0.0 -0.141633   \n",
              "7602 -0.0036  -46.804153  -53.794033  0.0  -5.124617 -1.1501  0.0 -0.141633   \n",
              "\n",
              "               8           9  ...        91        92          93          94  \\\n",
              "0     179.249390  114.661163  ... -0.107667 -4.469967  158.381409 -137.100632   \n",
              "1     179.249390  -44.338833  ... -0.107667 -4.469967  123.381416 -137.100632   \n",
              "2     -73.750618  -44.338833  ... -0.107667 -4.469967  157.381409 -137.100632   \n",
              "3      76.249382  208.661163  ... -0.107667 -4.469967  157.381409 -137.100632   \n",
              "4     179.249390  -44.338833  ... -0.107667 -4.469967   22.381416 -137.100632   \n",
              "...          ...         ...  ...       ...       ...         ...         ...   \n",
              "7598  179.249390  -44.338833  ... -0.107667 -4.469967  159.381409  115.899368   \n",
              "7599  -73.750618   67.661163  ... -0.107667 -4.469967  -93.618584   94.899368   \n",
              "7600  -73.750618  -44.338833  ... -0.107667 -4.469967  -93.618584 -137.100632   \n",
              "7601  153.249390  -44.338833  ... -0.107667 -4.469967  158.381409   23.899368   \n",
              "7602  178.249390  136.661163  ... -0.107667 -4.469967  148.381409   -9.100632   \n",
              "\n",
              "              95        96       97          98   99  target  \n",
              "0      27.131416 -2.274633 -0.00065  -12.351267  0.0       0  \n",
              "1     157.131409 -2.274633 -0.00065  -12.351267  0.0       0  \n",
              "2     -93.868584 -2.274633 -0.00065  -12.351267  0.0       0  \n",
              "3      74.131416 -2.274633 -0.00065  -12.351267  0.0       0  \n",
              "4     159.131409 -2.274633 -0.00065  -12.351267  0.0       0  \n",
              "...          ...       ...      ...         ...  ...     ...  \n",
              "7598  -93.868584 -2.274633 -0.00065  -12.351267  0.0       1  \n",
              "7599  -93.868584 -2.274633 -0.00065  -12.351267  0.0       1  \n",
              "7600  -53.868584 -2.274633 -0.00065  -12.351267  0.0       1  \n",
              "7601  -93.868584 -2.274633 -0.00065  125.648735  0.0       1  \n",
              "7602  -93.868584 -2.274633 -0.00065  -12.351267  0.0       1  \n",
              "\n",
              "[7603 rows x 101 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-55742feb-0acd-47ca-b12d-9fd04ae4ad53\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>...</th>\n",
              "      <th>91</th>\n",
              "      <th>92</th>\n",
              "      <th>93</th>\n",
              "      <th>94</th>\n",
              "      <th>95</th>\n",
              "      <th>96</th>\n",
              "      <th>97</th>\n",
              "      <th>98</th>\n",
              "      <th>99</th>\n",
              "      <th>target</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-0.0036</td>\n",
              "      <td>-73.804153</td>\n",
              "      <td>198.205963</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-13.124617</td>\n",
              "      <td>-1.1501</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.141633</td>\n",
              "      <td>179.249390</td>\n",
              "      <td>114.661163</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.107667</td>\n",
              "      <td>-4.469967</td>\n",
              "      <td>158.381409</td>\n",
              "      <td>-137.100632</td>\n",
              "      <td>27.131416</td>\n",
              "      <td>-2.274633</td>\n",
              "      <td>-0.00065</td>\n",
              "      <td>-12.351267</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-0.0036</td>\n",
              "      <td>-73.804153</td>\n",
              "      <td>197.205963</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-13.124617</td>\n",
              "      <td>-1.1501</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.141633</td>\n",
              "      <td>179.249390</td>\n",
              "      <td>-44.338833</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.107667</td>\n",
              "      <td>-4.469967</td>\n",
              "      <td>123.381416</td>\n",
              "      <td>-137.100632</td>\n",
              "      <td>157.131409</td>\n",
              "      <td>-2.274633</td>\n",
              "      <td>-0.00065</td>\n",
              "      <td>-12.351267</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-0.0036</td>\n",
              "      <td>-73.804153</td>\n",
              "      <td>-53.794033</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-13.124617</td>\n",
              "      <td>-1.1501</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.141633</td>\n",
              "      <td>-73.750618</td>\n",
              "      <td>-44.338833</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.107667</td>\n",
              "      <td>-4.469967</td>\n",
              "      <td>157.381409</td>\n",
              "      <td>-137.100632</td>\n",
              "      <td>-93.868584</td>\n",
              "      <td>-2.274633</td>\n",
              "      <td>-0.00065</td>\n",
              "      <td>-12.351267</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-0.0036</td>\n",
              "      <td>-73.804153</td>\n",
              "      <td>86.205963</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-13.124617</td>\n",
              "      <td>-1.1501</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.141633</td>\n",
              "      <td>76.249382</td>\n",
              "      <td>208.661163</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.107667</td>\n",
              "      <td>-4.469967</td>\n",
              "      <td>157.381409</td>\n",
              "      <td>-137.100632</td>\n",
              "      <td>74.131416</td>\n",
              "      <td>-2.274633</td>\n",
              "      <td>-0.00065</td>\n",
              "      <td>-12.351267</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-0.0036</td>\n",
              "      <td>-27.804153</td>\n",
              "      <td>199.205963</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-13.124617</td>\n",
              "      <td>-1.1501</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.141633</td>\n",
              "      <td>179.249390</td>\n",
              "      <td>-44.338833</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.107667</td>\n",
              "      <td>-4.469967</td>\n",
              "      <td>22.381416</td>\n",
              "      <td>-137.100632</td>\n",
              "      <td>159.131409</td>\n",
              "      <td>-2.274633</td>\n",
              "      <td>-0.00065</td>\n",
              "      <td>-12.351267</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7598</th>\n",
              "      <td>-0.0036</td>\n",
              "      <td>179.195847</td>\n",
              "      <td>0.205967</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-13.124617</td>\n",
              "      <td>-1.1501</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.141633</td>\n",
              "      <td>179.249390</td>\n",
              "      <td>-44.338833</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.107667</td>\n",
              "      <td>-4.469967</td>\n",
              "      <td>159.381409</td>\n",
              "      <td>115.899368</td>\n",
              "      <td>-93.868584</td>\n",
              "      <td>-2.274633</td>\n",
              "      <td>-0.00065</td>\n",
              "      <td>-12.351267</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7599</th>\n",
              "      <td>-0.0036</td>\n",
              "      <td>-73.804153</td>\n",
              "      <td>-53.794033</td>\n",
              "      <td>0.0</td>\n",
              "      <td>29.875383</td>\n",
              "      <td>-1.1501</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.141633</td>\n",
              "      <td>-73.750618</td>\n",
              "      <td>67.661163</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.107667</td>\n",
              "      <td>-4.469967</td>\n",
              "      <td>-93.618584</td>\n",
              "      <td>94.899368</td>\n",
              "      <td>-93.868584</td>\n",
              "      <td>-2.274633</td>\n",
              "      <td>-0.00065</td>\n",
              "      <td>-12.351267</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7600</th>\n",
              "      <td>-0.0036</td>\n",
              "      <td>-73.804153</td>\n",
              "      <td>-53.794033</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-13.124617</td>\n",
              "      <td>-1.1501</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.141633</td>\n",
              "      <td>-73.750618</td>\n",
              "      <td>-44.338833</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.107667</td>\n",
              "      <td>-4.469967</td>\n",
              "      <td>-93.618584</td>\n",
              "      <td>-137.100632</td>\n",
              "      <td>-53.868584</td>\n",
              "      <td>-2.274633</td>\n",
              "      <td>-0.00065</td>\n",
              "      <td>-12.351267</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7601</th>\n",
              "      <td>-0.0036</td>\n",
              "      <td>-73.804153</td>\n",
              "      <td>-53.794033</td>\n",
              "      <td>0.0</td>\n",
              "      <td>19.875383</td>\n",
              "      <td>-1.1501</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.141633</td>\n",
              "      <td>153.249390</td>\n",
              "      <td>-44.338833</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.107667</td>\n",
              "      <td>-4.469967</td>\n",
              "      <td>158.381409</td>\n",
              "      <td>23.899368</td>\n",
              "      <td>-93.868584</td>\n",
              "      <td>-2.274633</td>\n",
              "      <td>-0.00065</td>\n",
              "      <td>125.648735</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7602</th>\n",
              "      <td>-0.0036</td>\n",
              "      <td>-46.804153</td>\n",
              "      <td>-53.794033</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-5.124617</td>\n",
              "      <td>-1.1501</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.141633</td>\n",
              "      <td>178.249390</td>\n",
              "      <td>136.661163</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.107667</td>\n",
              "      <td>-4.469967</td>\n",
              "      <td>148.381409</td>\n",
              "      <td>-9.100632</td>\n",
              "      <td>-93.868584</td>\n",
              "      <td>-2.274633</td>\n",
              "      <td>-0.00065</td>\n",
              "      <td>-12.351267</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>7603 rows × 101 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-55742feb-0acd-47ca-b12d-9fd04ae4ad53')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-55742feb-0acd-47ca-b12d-9fd04ae4ad53 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-55742feb-0acd-47ca-b12d-9fd04ae4ad53');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 103
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data['X'].shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kJsuS73JlQbM",
        "outputId": "99fa8c17-6cc9-4501-8ca0-f8cd015edc9a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(7603, 100)"
            ]
          },
          "metadata": {},
          "execution_count": 104
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X = df.iloc[:, :-1].values\n",
        "y = df.iloc[:, -1].values\n",
        "X = scaler.fit_transform(X)\n",
        "\n",
        "counts = df['target'].value_counts()\n",
        "contamination = counts[1]/(counts[0] + counts[1])  # percentage of outliers\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, test_size=0.3, random_state=42)\n",
        "\n",
        "X_train_pd = pd.DataFrame(X_train)\n",
        "X_train_pd.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vwTE5U88m3qM",
        "outputId": "89e83108-932f-4392-b94d-6e058417cb7c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    0         1         2    3         4         5    6         7         8   \\\n",
              "0  0.0 -0.667510  0.958133  0.0 -0.208549 -0.063490  0.0 -0.026254 -1.543515   \n",
              "1  0.0  0.125665  0.967269  0.0 -0.208549 -0.063490  0.0 -0.026254  0.568647   \n",
              "2  0.0 -0.163611  0.327786  0.0 -0.208549 -0.063490  0.0 -0.026254 -0.658690   \n",
              "3  0.0 -0.919459  0.958133  0.0 -0.208549  8.868944  0.0 -0.026254  0.863589   \n",
              "4  0.0  1.441402  0.958133  0.0 -0.208549 -0.063490  0.0 -0.026254  0.863589   \n",
              "\n",
              "         9   ...        90   91        92        93        94        95  \\\n",
              "0  0.533873  ...  0.002568  0.0  4.408915  0.819529 -0.309656 -0.587901   \n",
              "1 -0.695434  ...  1.049487  0.0 -0.311593 -1.405250 -0.309656  2.258400   \n",
              "2 -0.601674  ...  1.040383  0.0 -0.311593  0.940542 -0.309656 -0.587901   \n",
              "3 -0.695434  ... -1.262837  0.0 -0.311593  0.949851 -0.309656 -0.587901   \n",
              "4 -0.695434  ...  1.040383  0.0 -0.311593 -1.405250 -0.309656 -0.587901   \n",
              "\n",
              "         96        97        98   99  \n",
              "0 -0.089334 -0.011469  2.419760  0.0  \n",
              "1 -0.089334 -0.011469 -0.270945  0.0  \n",
              "2 -0.089334 -0.011469 -0.540015  0.0  \n",
              "3 -0.089334 -0.011469 -0.540015  0.0  \n",
              "4 -0.089334 -0.011469  2.010305  0.0  \n",
              "\n",
              "[5 rows x 100 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ee5138e5-3921-40bc-9e25-363935252e75\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>...</th>\n",
              "      <th>90</th>\n",
              "      <th>91</th>\n",
              "      <th>92</th>\n",
              "      <th>93</th>\n",
              "      <th>94</th>\n",
              "      <th>95</th>\n",
              "      <th>96</th>\n",
              "      <th>97</th>\n",
              "      <th>98</th>\n",
              "      <th>99</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.667510</td>\n",
              "      <td>0.958133</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.208549</td>\n",
              "      <td>-0.063490</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.026254</td>\n",
              "      <td>-1.543515</td>\n",
              "      <td>0.533873</td>\n",
              "      <td>...</td>\n",
              "      <td>0.002568</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.408915</td>\n",
              "      <td>0.819529</td>\n",
              "      <td>-0.309656</td>\n",
              "      <td>-0.587901</td>\n",
              "      <td>-0.089334</td>\n",
              "      <td>-0.011469</td>\n",
              "      <td>2.419760</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.125665</td>\n",
              "      <td>0.967269</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.208549</td>\n",
              "      <td>-0.063490</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.026254</td>\n",
              "      <td>0.568647</td>\n",
              "      <td>-0.695434</td>\n",
              "      <td>...</td>\n",
              "      <td>1.049487</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.311593</td>\n",
              "      <td>-1.405250</td>\n",
              "      <td>-0.309656</td>\n",
              "      <td>2.258400</td>\n",
              "      <td>-0.089334</td>\n",
              "      <td>-0.011469</td>\n",
              "      <td>-0.270945</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.163611</td>\n",
              "      <td>0.327786</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.208549</td>\n",
              "      <td>-0.063490</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.026254</td>\n",
              "      <td>-0.658690</td>\n",
              "      <td>-0.601674</td>\n",
              "      <td>...</td>\n",
              "      <td>1.040383</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.311593</td>\n",
              "      <td>0.940542</td>\n",
              "      <td>-0.309656</td>\n",
              "      <td>-0.587901</td>\n",
              "      <td>-0.089334</td>\n",
              "      <td>-0.011469</td>\n",
              "      <td>-0.540015</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.919459</td>\n",
              "      <td>0.958133</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.208549</td>\n",
              "      <td>8.868944</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.026254</td>\n",
              "      <td>0.863589</td>\n",
              "      <td>-0.695434</td>\n",
              "      <td>...</td>\n",
              "      <td>-1.262837</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.311593</td>\n",
              "      <td>0.949851</td>\n",
              "      <td>-0.309656</td>\n",
              "      <td>-0.587901</td>\n",
              "      <td>-0.089334</td>\n",
              "      <td>-0.011469</td>\n",
              "      <td>-0.540015</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.0</td>\n",
              "      <td>1.441402</td>\n",
              "      <td>0.958133</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.208549</td>\n",
              "      <td>-0.063490</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.026254</td>\n",
              "      <td>0.863589</td>\n",
              "      <td>-0.695434</td>\n",
              "      <td>...</td>\n",
              "      <td>1.040383</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.311593</td>\n",
              "      <td>-1.405250</td>\n",
              "      <td>-0.309656</td>\n",
              "      <td>-0.587901</td>\n",
              "      <td>-0.089334</td>\n",
              "      <td>-0.011469</td>\n",
              "      <td>2.010305</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 100 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ee5138e5-3921-40bc-9e25-363935252e75')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ee5138e5-3921-40bc-9e25-363935252e75 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ee5138e5-3921-40bc-9e25-363935252e75');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 105
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Liver dataset**"
      ],
      "metadata": {
        "id": "q7xql8vnqDSd"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://archive.ics.uci.edu/ml/machine-learning-databases/liver-disorders/bupa.data"
      ],
      "metadata": {
        "id": "rW08_l88t_5n"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "1. Title: BUPA liver disorders\n",
        "\n",
        "2. Source information:\n",
        "\n",
        "   -- Creators: BUPA Medical Research Ltd.\n",
        "\n",
        "   -- Donor: Richard S. Forsyth 8 Grosvenor Avenue Mapperley Park Nottingham NG3 5DX, 0602-621676\n",
        "   \n",
        "   -- Date: 5/15/1990\n",
        "\n",
        "3. Past usage: \n",
        "   -- None known other than what is shown in the PC/BEAGLE User's Guide\n",
        "      (written by Richard S. Forsyth).\n",
        "\n",
        "4. Relevant information:\n",
        "   -- The first 5 variables are all blood tests which are thought\n",
        "      to be sensitive to liver disorders that might arise from\n",
        "      excessive alcohol consumption.  Each line in the bupa.data file\n",
        "      constitutes the record of a single male individual.\n",
        "   -- It appears that drinks>5 is some sort of a selector on this database.\n",
        "      See the PC/BEAGLE User's Guide for more information.\n",
        "\n",
        "5. Number of instances: 345\n",
        "\n",
        "6. Number of attributes: 7 overall\n",
        "\n",
        "7. Attribute information:\n",
        "   1. mcv\tmean corpuscular volume\n",
        "   2. alkphos\talkaline phosphotase\n",
        "   3. sgpt\talamine aminotransferase\n",
        "   4. sgot \taspartate aminotransferase\n",
        "   5. gammagt\tgamma-glutamyl transpeptidase\n",
        "   6. drinks\tnumber of half-pint equivalents of alcoholic beverages drunk per day\n",
        "   7. selector  field used to split data into two sets\n",
        "\n",
        "8. Missing values: none"
      ],
      "metadata": {
        "id": "5m9ZPHHvPXWM"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "1-5: blood, 6th -> gives the drinks  and if is drinks>5 then HIGH:1 if drinks<=5 then drinks LO:0. the 7th column gives the recommendes train and test data. We can try with random test and train data and we can try the recommended. WE HAVE TO REMOVE THE DOUBLE ENTRIES (clean data):\n",
        "\n",
        "Thanks to Leon for mentioning that there are duplicates in this data set.\n",
        "--UCI ML Librarian\n",
        "\n",
        "row 84 and 86:   94,58,21,18,26,2.0,\n",
        "\n",
        "row 141 and 318:   92,80,10,26,20,6.0,1\n",
        "\n",
        "row 143 and 150:   91,63,25,26,15,6.0,1\n",
        "\n",
        "row 170 and 176:   97,71,29,22,52,8.0,1\n"
      ],
      "metadata": {
        "id": "FSwb8yPfO9MQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataset = datasets[5]\n",
        "df = pd.read_csv(directory_path + dataset, header=None)\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "UOqjDZxqT7aW",
        "outputId": "0802337a-246e-4035-d98c-245bf592c8c1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      0   1   2   3    4     5  6\n",
              "0    85  92  45  27   31   0.0  1\n",
              "1    85  64  59  32   23   0.0  2\n",
              "2    86  54  33  16   54   0.0  2\n",
              "3    91  78  34  24   36   0.0  2\n",
              "4    87  70  12  28   10   0.0  2\n",
              "..   ..  ..  ..  ..  ...   ... ..\n",
              "340  99  75  26  24   41  12.0  1\n",
              "341  96  69  53  43  203  12.0  2\n",
              "342  98  77  55  35   89  15.0  1\n",
              "343  91  68  27  26   14  16.0  1\n",
              "344  98  99  57  45   65  20.0  1\n",
              "\n",
              "[345 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c7b1511a-e2e0-42f3-8f4c-a22563c058f1\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>85</td>\n",
              "      <td>92</td>\n",
              "      <td>45</td>\n",
              "      <td>27</td>\n",
              "      <td>31</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>85</td>\n",
              "      <td>64</td>\n",
              "      <td>59</td>\n",
              "      <td>32</td>\n",
              "      <td>23</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>86</td>\n",
              "      <td>54</td>\n",
              "      <td>33</td>\n",
              "      <td>16</td>\n",
              "      <td>54</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>91</td>\n",
              "      <td>78</td>\n",
              "      <td>34</td>\n",
              "      <td>24</td>\n",
              "      <td>36</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>87</td>\n",
              "      <td>70</td>\n",
              "      <td>12</td>\n",
              "      <td>28</td>\n",
              "      <td>10</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>340</th>\n",
              "      <td>99</td>\n",
              "      <td>75</td>\n",
              "      <td>26</td>\n",
              "      <td>24</td>\n",
              "      <td>41</td>\n",
              "      <td>12.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>341</th>\n",
              "      <td>96</td>\n",
              "      <td>69</td>\n",
              "      <td>53</td>\n",
              "      <td>43</td>\n",
              "      <td>203</td>\n",
              "      <td>12.0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>342</th>\n",
              "      <td>98</td>\n",
              "      <td>77</td>\n",
              "      <td>55</td>\n",
              "      <td>35</td>\n",
              "      <td>89</td>\n",
              "      <td>15.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>343</th>\n",
              "      <td>91</td>\n",
              "      <td>68</td>\n",
              "      <td>27</td>\n",
              "      <td>26</td>\n",
              "      <td>14</td>\n",
              "      <td>16.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>344</th>\n",
              "      <td>98</td>\n",
              "      <td>99</td>\n",
              "      <td>57</td>\n",
              "      <td>45</td>\n",
              "      <td>65</td>\n",
              "      <td>20.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>345 rows × 7 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c7b1511a-e2e0-42f3-8f4c-a22563c058f1')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c7b1511a-e2e0-42f3-8f4c-a22563c058f1 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c7b1511a-e2e0-42f3-8f4c-a22563c058f1');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 619
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Remove the duplicates\n",
        "df = df.drop_duplicates(keep=False)\n",
        "df = df.reset_index(drop=True)\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "fOaDT3GDT-dh",
        "outputId": "2d6a3e4b-acf6-4fbd-b286-de2386a1315c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      0   1   2   3    4     5  6\n",
              "0    85  92  45  27   31   0.0  1\n",
              "1    85  64  59  32   23   0.0  2\n",
              "2    86  54  33  16   54   0.0  2\n",
              "3    91  78  34  24   36   0.0  2\n",
              "4    87  70  12  28   10   0.0  2\n",
              "..   ..  ..  ..  ..  ...   ... ..\n",
              "332  99  75  26  24   41  12.0  1\n",
              "333  96  69  53  43  203  12.0  2\n",
              "334  98  77  55  35   89  15.0  1\n",
              "335  91  68  27  26   14  16.0  1\n",
              "336  98  99  57  45   65  20.0  1\n",
              "\n",
              "[337 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-71b1f8bb-c589-46a4-9dde-765576f94fc0\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>85</td>\n",
              "      <td>92</td>\n",
              "      <td>45</td>\n",
              "      <td>27</td>\n",
              "      <td>31</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>85</td>\n",
              "      <td>64</td>\n",
              "      <td>59</td>\n",
              "      <td>32</td>\n",
              "      <td>23</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>86</td>\n",
              "      <td>54</td>\n",
              "      <td>33</td>\n",
              "      <td>16</td>\n",
              "      <td>54</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>91</td>\n",
              "      <td>78</td>\n",
              "      <td>34</td>\n",
              "      <td>24</td>\n",
              "      <td>36</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>87</td>\n",
              "      <td>70</td>\n",
              "      <td>12</td>\n",
              "      <td>28</td>\n",
              "      <td>10</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>332</th>\n",
              "      <td>99</td>\n",
              "      <td>75</td>\n",
              "      <td>26</td>\n",
              "      <td>24</td>\n",
              "      <td>41</td>\n",
              "      <td>12.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>333</th>\n",
              "      <td>96</td>\n",
              "      <td>69</td>\n",
              "      <td>53</td>\n",
              "      <td>43</td>\n",
              "      <td>203</td>\n",
              "      <td>12.0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>334</th>\n",
              "      <td>98</td>\n",
              "      <td>77</td>\n",
              "      <td>55</td>\n",
              "      <td>35</td>\n",
              "      <td>89</td>\n",
              "      <td>15.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>335</th>\n",
              "      <td>91</td>\n",
              "      <td>68</td>\n",
              "      <td>27</td>\n",
              "      <td>26</td>\n",
              "      <td>14</td>\n",
              "      <td>16.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>336</th>\n",
              "      <td>98</td>\n",
              "      <td>99</td>\n",
              "      <td>57</td>\n",
              "      <td>45</td>\n",
              "      <td>65</td>\n",
              "      <td>20.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>337 rows × 7 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-71b1f8bb-c589-46a4-9dde-765576f94fc0')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-71b1f8bb-c589-46a4-9dde-765576f94fc0 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-71b1f8bb-c589-46a4-9dde-765576f94fc0');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 620
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['target'] = df[5].apply(lambda x: 0  if x <= 5 else 1)\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "dTOWKuAGNFuA",
        "outputId": "f510fa43-2b69-4374-e661-c6da941d4000"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      0   1   2   3    4     5  6  target\n",
              "0    85  92  45  27   31   0.0  1       0\n",
              "1    85  64  59  32   23   0.0  2       0\n",
              "2    86  54  33  16   54   0.0  2       0\n",
              "3    91  78  34  24   36   0.0  2       0\n",
              "4    87  70  12  28   10   0.0  2       0\n",
              "..   ..  ..  ..  ..  ...   ... ..     ...\n",
              "332  99  75  26  24   41  12.0  1       1\n",
              "333  96  69  53  43  203  12.0  2       1\n",
              "334  98  77  55  35   89  15.0  1       1\n",
              "335  91  68  27  26   14  16.0  1       1\n",
              "336  98  99  57  45   65  20.0  1       1\n",
              "\n",
              "[337 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-153768cb-72a5-44ab-b44e-56459f4bcd98\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>target</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>85</td>\n",
              "      <td>92</td>\n",
              "      <td>45</td>\n",
              "      <td>27</td>\n",
              "      <td>31</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>85</td>\n",
              "      <td>64</td>\n",
              "      <td>59</td>\n",
              "      <td>32</td>\n",
              "      <td>23</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>86</td>\n",
              "      <td>54</td>\n",
              "      <td>33</td>\n",
              "      <td>16</td>\n",
              "      <td>54</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>91</td>\n",
              "      <td>78</td>\n",
              "      <td>34</td>\n",
              "      <td>24</td>\n",
              "      <td>36</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>87</td>\n",
              "      <td>70</td>\n",
              "      <td>12</td>\n",
              "      <td>28</td>\n",
              "      <td>10</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>332</th>\n",
              "      <td>99</td>\n",
              "      <td>75</td>\n",
              "      <td>26</td>\n",
              "      <td>24</td>\n",
              "      <td>41</td>\n",
              "      <td>12.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>333</th>\n",
              "      <td>96</td>\n",
              "      <td>69</td>\n",
              "      <td>53</td>\n",
              "      <td>43</td>\n",
              "      <td>203</td>\n",
              "      <td>12.0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>334</th>\n",
              "      <td>98</td>\n",
              "      <td>77</td>\n",
              "      <td>55</td>\n",
              "      <td>35</td>\n",
              "      <td>89</td>\n",
              "      <td>15.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>335</th>\n",
              "      <td>91</td>\n",
              "      <td>68</td>\n",
              "      <td>27</td>\n",
              "      <td>26</td>\n",
              "      <td>14</td>\n",
              "      <td>16.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>336</th>\n",
              "      <td>98</td>\n",
              "      <td>99</td>\n",
              "      <td>57</td>\n",
              "      <td>45</td>\n",
              "      <td>65</td>\n",
              "      <td>20.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>337 rows × 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-153768cb-72a5-44ab-b44e-56459f4bcd98')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-153768cb-72a5-44ab-b44e-56459f4bcd98 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-153768cb-72a5-44ab-b44e-56459f4bcd98');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 621
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X = df.iloc[:, :-2].values\n",
        "y = df.iloc[:, -1].values\n",
        "X"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QKJjrNsBPQdx",
        "outputId": "ba3fed8e-380a-4487-8f25-66152feaf2ce"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[85., 92., 45., 27., 31.,  0.],\n",
              "       [85., 64., 59., 32., 23.,  0.],\n",
              "       [86., 54., 33., 16., 54.,  0.],\n",
              "       ...,\n",
              "       [98., 77., 55., 35., 89., 15.],\n",
              "       [91., 68., 27., 26., 14., 16.],\n",
              "       [98., 99., 57., 45., 65., 20.]])"
            ]
          },
          "metadata": {},
          "execution_count": 622
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3G16cTpaQRVe",
        "outputId": "4b4cb821-25bb-4a84-8d95-43bea08c348f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index([0, 1, 2, 3, 4, 5, 6, 'target'], dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 623
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "counts = df['target'].value_counts()\n",
        "contamination = counts[1]/(counts[0] +counts[1])\n",
        "\n",
        "#contamination =   # percentage of outliers\n",
        "n_features = 5              # number of features\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, test_size=0.3, random_state=42)\n",
        "\n",
        "X_train_pd = pd.DataFrame(X_train)\n",
        "X_train_pd.head()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "ftGz9HPuPAtc",
        "outputId": "5c6cf456-3c35-405c-edd1-cebbbcc05bff"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      0     1     2     3     4    5\n",
              "0  82.0  62.0  17.0  17.0  15.0  0.5\n",
              "1  87.0  69.0  22.0  26.0  11.0  0.5\n",
              "2  96.0  70.0  21.0  26.0  21.0  4.0\n",
              "3  90.0  73.0  24.0  23.0  11.0  0.5\n",
              "4  89.0  63.0  22.0  27.0  10.0  4.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-06d12aad-7aba-446a-853c-fff628cedd58\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>82.0</td>\n",
              "      <td>62.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>15.0</td>\n",
              "      <td>0.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>87.0</td>\n",
              "      <td>69.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>26.0</td>\n",
              "      <td>11.0</td>\n",
              "      <td>0.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>96.0</td>\n",
              "      <td>70.0</td>\n",
              "      <td>21.0</td>\n",
              "      <td>26.0</td>\n",
              "      <td>21.0</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>90.0</td>\n",
              "      <td>73.0</td>\n",
              "      <td>24.0</td>\n",
              "      <td>23.0</td>\n",
              "      <td>11.0</td>\n",
              "      <td>0.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>89.0</td>\n",
              "      <td>63.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>27.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-06d12aad-7aba-446a-853c-fff628cedd58')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-06d12aad-7aba-446a-853c-fff628cedd58 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-06d12aad-7aba-446a-853c-fff628cedd58');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 624
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Arrhythmia dataset**\n"
      ],
      "metadata": {
        "id": "enKu06SOqHgi"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://archive.ics.uci.edu/ml/machine-learning-databases/arrhythmia/arrhythmia.data"
      ],
      "metadata": {
        "id": "waRrgcCSuGR5"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Data Set Information:\n",
        "\n",
        "This database contains 279 attributes, 206 of which are linear valued and the rest are nominal.\n",
        "\n",
        "Concerning the study of H. Altay Guvenir: \"The aim is to distinguish between the presence and absence of cardiac arrhythmia and to classify it in one of the 16 groups. Class 01 refers to 'normal' ECG classes 02 to 15 refers to different classes of arrhythmia and class 16 refers to the rest of unclassified ones. For the time being, there exists a computer program that makes such a classification. However there are differences between the cardiolog's and the programs classification. Taking the cardiolog's as a gold standard we aim to minimise this difference by means of machine learning tools.\"\n",
        "\n",
        "The names and id numbers of the patients were recently removed from the database.\n",
        "\n",
        "\n",
        "\n",
        "Attribute Information:\n",
        "\n",
        "-- Complete attribute documentation:\n",
        "1. Age: Age in years , linear\n",
        "2. Sex: Sex (0 = male; 1 = female) , nominal\n",
        "3. Height: Height in centimeters , linear\n",
        "4. Weight: Weight in kilograms , linear\n",
        "5. QRS duration: Average of QRS duration in msec., linear\n",
        "6. P-R interval: Average duration between onset of P and Q waves in msec., linear\n",
        "7. Q-T interval: Average duration between onset of Q and offset of T waves in msec., linear\n",
        "8. T interval: Average duration of T wave in msec., linear\n",
        "9. P interval: Average duration of P wave in msec., linear\n",
        "Vector angles in degrees on front plane of:, linear\n",
        "10. QRS\n",
        "11. T\n",
        "12. P\n",
        "13. QRST\n",
        "14. J\n",
        "\n",
        "15. Heart rate: Number of heart beats per minute ,linear\n",
        "Of channel DI:\n",
        "Average width, in msec., of: linear\n",
        "16 Q wave\n",
        "17 R wave\n",
        "18 S wave\n",
        "19 R' wave, small peak just after R\n",
        "20 S' wave\n",
        "\n",
        "21 Number of intrinsic deflections, linear\n",
        "\n",
        "22 Existence of ragged R wave, nominal\n",
        "23 Existence of diphasic derivation of R wave, nominal\n",
        "24 Existence of ragged P wave, nominal\n",
        "25 Existence of diphasic derivation of P wave, nominal\n",
        "26 Existence of ragged T wave, nominal\n",
        "27 Existence of diphasic derivation of T wave, nominal\n",
        "\n",
        "Of channel DII:\n",
        "28 .. 39 (similar to 16 .. 27 of channel DI)\n",
        "Of channels DIII:\n",
        "40 .. 51\n",
        "Of channel AVR:\n",
        "52 .. 63\n",
        "Of channel AVL:\n",
        "64 .. 75\n",
        "Of channel AVF:\n",
        "76 .. 87\n",
        "Of channel V1:\n",
        "88 .. 99\n",
        "Of channel V2:\n",
        "100 .. 111\n",
        "Of channel V3:\n",
        "112 .. 123\n",
        "Of channel V4:\n",
        "124 .. 135\n",
        "Of channel V5:\n",
        "136 .. 147\n",
        "Of channel V6:\n",
        "148 .. 159\n",
        "\n",
        "Of channel DI:\n",
        "Amplitude , * 0.1 milivolt, of\n",
        "160 JJ wave, linear\n",
        "161 Q wave, linear\n",
        "162 R wave, linear\n",
        "163 S wave, linear\n",
        "164 R' wave, linear\n",
        "165 S' wave, linear\n",
        "166 P wave, linear\n",
        "167 T wave, linear\n",
        "\n",
        "168 QRSA , Sum of areas of all segments divided by 10, ( Area= width * height / 2 ), linear\n",
        "169 QRSTA = QRSA + 0.5 * width of T wave * 0.1 * height of T wave. (If T is diphasic then the bigger segment is considered), linear\n",
        "\n",
        "Of channel DII:\n",
        "170 .. 179\n",
        "Of channel DIII:\n",
        "180 .. 189\n",
        "Of channel AVR:\n",
        "190 .. 199\n",
        "Of channel AVL:\n",
        "200 .. 209\n",
        "Of channel AVF:\n",
        "210 .. 219\n",
        "Of channel V1:\n",
        "220 .. 229\n",
        "Of channel V2:\n",
        "230 .. 239\n",
        "Of channel V3:\n",
        "240 .. 249\n",
        "Of channel V4:\n",
        "250 .. 259\n",
        "Of channel V5:\n",
        "260 .. 269\n",
        "Of channel V6:\n",
        "270 .. 279\n",
        "\n"
      ],
      "metadata": {
        "id": "g_KSdcEcbemO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataset = datasets[8]\n",
        "df = pd.read_csv(directory_path + dataset, header=None)\n",
        "df.head()"
      ],
      "metadata": {
        "id": "psI3qud1bdfo",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 236
        },
        "outputId": "04881ab7-42e7-4f2c-a273-d88ee64daf13"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   0    1    2    3    4    5    6    7    8    9    ...  270   271  272  273  \\\n",
              "0   75    0  190   80   91  193  371  174  121  -16  ...  0.0   9.0 -0.9  0.0   \n",
              "1   56    1  165   64   81  174  401  149   39   25  ...  0.0   8.5  0.0  0.0   \n",
              "2   54    0  172   95  138  163  386  185  102   96  ...  0.0   9.5 -2.4  0.0   \n",
              "3   55    0  175   94  100  202  380  179  143   28  ...  0.0  12.2 -2.2  0.0   \n",
              "4   75    0  190   80   88  181  360  177  103  -16  ...  0.0  13.1 -3.6  0.0   \n",
              "\n",
              "   274  275  276   277   278  279  \n",
              "0  0.0  0.9  2.9  23.3  49.4    8  \n",
              "1  0.0  0.2  2.1  20.4  38.8    6  \n",
              "2  0.0  0.3  3.4  12.3  49.0   10  \n",
              "3  0.0  0.4  2.6  34.6  61.6    1  \n",
              "4  0.0 -0.1  3.9  25.4  62.8    7  \n",
              "\n",
              "[5 rows x 280 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-613ee5fb-b08c-46fd-93f9-f59e08419608\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>...</th>\n",
              "      <th>270</th>\n",
              "      <th>271</th>\n",
              "      <th>272</th>\n",
              "      <th>273</th>\n",
              "      <th>274</th>\n",
              "      <th>275</th>\n",
              "      <th>276</th>\n",
              "      <th>277</th>\n",
              "      <th>278</th>\n",
              "      <th>279</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>190</td>\n",
              "      <td>80</td>\n",
              "      <td>91</td>\n",
              "      <td>193</td>\n",
              "      <td>371</td>\n",
              "      <td>174</td>\n",
              "      <td>121</td>\n",
              "      <td>-16</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9.0</td>\n",
              "      <td>-0.9</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.9</td>\n",
              "      <td>2.9</td>\n",
              "      <td>23.3</td>\n",
              "      <td>49.4</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>56</td>\n",
              "      <td>1</td>\n",
              "      <td>165</td>\n",
              "      <td>64</td>\n",
              "      <td>81</td>\n",
              "      <td>174</td>\n",
              "      <td>401</td>\n",
              "      <td>149</td>\n",
              "      <td>39</td>\n",
              "      <td>25</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2.1</td>\n",
              "      <td>20.4</td>\n",
              "      <td>38.8</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>54</td>\n",
              "      <td>0</td>\n",
              "      <td>172</td>\n",
              "      <td>95</td>\n",
              "      <td>138</td>\n",
              "      <td>163</td>\n",
              "      <td>386</td>\n",
              "      <td>185</td>\n",
              "      <td>102</td>\n",
              "      <td>96</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9.5</td>\n",
              "      <td>-2.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>12.3</td>\n",
              "      <td>49.0</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>55</td>\n",
              "      <td>0</td>\n",
              "      <td>175</td>\n",
              "      <td>94</td>\n",
              "      <td>100</td>\n",
              "      <td>202</td>\n",
              "      <td>380</td>\n",
              "      <td>179</td>\n",
              "      <td>143</td>\n",
              "      <td>28</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12.2</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>2.6</td>\n",
              "      <td>34.6</td>\n",
              "      <td>61.6</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>190</td>\n",
              "      <td>80</td>\n",
              "      <td>88</td>\n",
              "      <td>181</td>\n",
              "      <td>360</td>\n",
              "      <td>177</td>\n",
              "      <td>103</td>\n",
              "      <td>-16</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>13.1</td>\n",
              "      <td>-3.6</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.1</td>\n",
              "      <td>3.9</td>\n",
              "      <td>25.4</td>\n",
              "      <td>62.8</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 280 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-613ee5fb-b08c-46fd-93f9-f59e08419608')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-613ee5fb-b08c-46fd-93f9-f59e08419608 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-613ee5fb-b08c-46fd-93f9-f59e08419608');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 236
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Missing Attribute Values: Several.  Distinguished with '?'\n",
        "df.replace({col: {'?': np.nan} for col in df}, inplace=True)\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 236
        },
        "id": "hPxIRCniG46M",
        "outputId": "818a1adc-04e5-4b4f-ea4e-c8ec566b5728"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   0    1    2    3    4    5    6    7    8    9    ...  270   271  272  273  \\\n",
              "0   75    0  190   80   91  193  371  174  121  -16  ...  0.0   9.0 -0.9  0.0   \n",
              "1   56    1  165   64   81  174  401  149   39   25  ...  0.0   8.5  0.0  0.0   \n",
              "2   54    0  172   95  138  163  386  185  102   96  ...  0.0   9.5 -2.4  0.0   \n",
              "3   55    0  175   94  100  202  380  179  143   28  ...  0.0  12.2 -2.2  0.0   \n",
              "4   75    0  190   80   88  181  360  177  103  -16  ...  0.0  13.1 -3.6  0.0   \n",
              "\n",
              "   274  275  276   277   278  279  \n",
              "0  0.0  0.9  2.9  23.3  49.4    8  \n",
              "1  0.0  0.2  2.1  20.4  38.8    6  \n",
              "2  0.0  0.3  3.4  12.3  49.0   10  \n",
              "3  0.0  0.4  2.6  34.6  61.6    1  \n",
              "4  0.0 -0.1  3.9  25.4  62.8    7  \n",
              "\n",
              "[5 rows x 280 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6d696eb6-38d5-4bf8-99ef-27791673b586\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>...</th>\n",
              "      <th>270</th>\n",
              "      <th>271</th>\n",
              "      <th>272</th>\n",
              "      <th>273</th>\n",
              "      <th>274</th>\n",
              "      <th>275</th>\n",
              "      <th>276</th>\n",
              "      <th>277</th>\n",
              "      <th>278</th>\n",
              "      <th>279</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>190</td>\n",
              "      <td>80</td>\n",
              "      <td>91</td>\n",
              "      <td>193</td>\n",
              "      <td>371</td>\n",
              "      <td>174</td>\n",
              "      <td>121</td>\n",
              "      <td>-16</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9.0</td>\n",
              "      <td>-0.9</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.9</td>\n",
              "      <td>2.9</td>\n",
              "      <td>23.3</td>\n",
              "      <td>49.4</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>56</td>\n",
              "      <td>1</td>\n",
              "      <td>165</td>\n",
              "      <td>64</td>\n",
              "      <td>81</td>\n",
              "      <td>174</td>\n",
              "      <td>401</td>\n",
              "      <td>149</td>\n",
              "      <td>39</td>\n",
              "      <td>25</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2.1</td>\n",
              "      <td>20.4</td>\n",
              "      <td>38.8</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>54</td>\n",
              "      <td>0</td>\n",
              "      <td>172</td>\n",
              "      <td>95</td>\n",
              "      <td>138</td>\n",
              "      <td>163</td>\n",
              "      <td>386</td>\n",
              "      <td>185</td>\n",
              "      <td>102</td>\n",
              "      <td>96</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9.5</td>\n",
              "      <td>-2.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>12.3</td>\n",
              "      <td>49.0</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>55</td>\n",
              "      <td>0</td>\n",
              "      <td>175</td>\n",
              "      <td>94</td>\n",
              "      <td>100</td>\n",
              "      <td>202</td>\n",
              "      <td>380</td>\n",
              "      <td>179</td>\n",
              "      <td>143</td>\n",
              "      <td>28</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12.2</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>2.6</td>\n",
              "      <td>34.6</td>\n",
              "      <td>61.6</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>190</td>\n",
              "      <td>80</td>\n",
              "      <td>88</td>\n",
              "      <td>181</td>\n",
              "      <td>360</td>\n",
              "      <td>177</td>\n",
              "      <td>103</td>\n",
              "      <td>-16</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>13.1</td>\n",
              "      <td>-3.6</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.1</td>\n",
              "      <td>3.9</td>\n",
              "      <td>25.4</td>\n",
              "      <td>62.8</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 280 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6d696eb6-38d5-4bf8-99ef-27791673b586')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6d696eb6-38d5-4bf8-99ef-27791673b586 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6d696eb6-38d5-4bf8-99ef-27791673b586');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 237
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Count the number of NaN values in each row\n",
        "nan_rows = df.isnull().any(axis=1).sum()\n",
        "print(\"Number of rows with NaN values:\", nan_rows)\n",
        "\n",
        "# Count the number of NaN values in each column\n",
        "nan_columns = df.isnull().any(axis=0).sum()\n",
        "print(\"Number of columns with NaN values:\", nan_columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rXSaH-bgG37J",
        "outputId": "eaee4773-9ad1-452c-9bd2-84a6cd29c42a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of rows with NaN values: 384\n",
            "Number of columns with NaN values: 5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#We will remove the columns\n",
        "df = df.dropna(axis=1)\n",
        "print(\"The new shape of the dataset is:\", df.shape)\n",
        "print(\"Number of rows with NaN values:\", df.isnull().any(axis=1).sum())\n",
        "print(\"Number of columns with NaN values:\", df.isnull().any(axis=0).sum())\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 288
        },
        "id": "uDQF8KFbBDOj",
        "outputId": "df812515-7e7e-43ec-8485-5de388a8af4e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The new shape of the dataset is: (452, 275)\n",
            "Number of rows with NaN values: 0\n",
            "Number of columns with NaN values: 0\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   0    1    2    3    4    5    6    7    8    9    ...  270   271  272  273  \\\n",
              "0   75    0  190   80   91  193  371  174  121  -16  ...  0.0   9.0 -0.9  0.0   \n",
              "1   56    1  165   64   81  174  401  149   39   25  ...  0.0   8.5  0.0  0.0   \n",
              "2   54    0  172   95  138  163  386  185  102   96  ...  0.0   9.5 -2.4  0.0   \n",
              "3   55    0  175   94  100  202  380  179  143   28  ...  0.0  12.2 -2.2  0.0   \n",
              "4   75    0  190   80   88  181  360  177  103  -16  ...  0.0  13.1 -3.6  0.0   \n",
              "\n",
              "   274  275  276   277   278  279  \n",
              "0  0.0  0.9  2.9  23.3  49.4    8  \n",
              "1  0.0  0.2  2.1  20.4  38.8    6  \n",
              "2  0.0  0.3  3.4  12.3  49.0   10  \n",
              "3  0.0  0.4  2.6  34.6  61.6    1  \n",
              "4  0.0 -0.1  3.9  25.4  62.8    7  \n",
              "\n",
              "[5 rows x 275 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f7d34d5c-4d24-41e7-a925-0feba2f00eeb\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>...</th>\n",
              "      <th>270</th>\n",
              "      <th>271</th>\n",
              "      <th>272</th>\n",
              "      <th>273</th>\n",
              "      <th>274</th>\n",
              "      <th>275</th>\n",
              "      <th>276</th>\n",
              "      <th>277</th>\n",
              "      <th>278</th>\n",
              "      <th>279</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>190</td>\n",
              "      <td>80</td>\n",
              "      <td>91</td>\n",
              "      <td>193</td>\n",
              "      <td>371</td>\n",
              "      <td>174</td>\n",
              "      <td>121</td>\n",
              "      <td>-16</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9.0</td>\n",
              "      <td>-0.9</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.9</td>\n",
              "      <td>2.9</td>\n",
              "      <td>23.3</td>\n",
              "      <td>49.4</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>56</td>\n",
              "      <td>1</td>\n",
              "      <td>165</td>\n",
              "      <td>64</td>\n",
              "      <td>81</td>\n",
              "      <td>174</td>\n",
              "      <td>401</td>\n",
              "      <td>149</td>\n",
              "      <td>39</td>\n",
              "      <td>25</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2.1</td>\n",
              "      <td>20.4</td>\n",
              "      <td>38.8</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>54</td>\n",
              "      <td>0</td>\n",
              "      <td>172</td>\n",
              "      <td>95</td>\n",
              "      <td>138</td>\n",
              "      <td>163</td>\n",
              "      <td>386</td>\n",
              "      <td>185</td>\n",
              "      <td>102</td>\n",
              "      <td>96</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>9.5</td>\n",
              "      <td>-2.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>12.3</td>\n",
              "      <td>49.0</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>55</td>\n",
              "      <td>0</td>\n",
              "      <td>175</td>\n",
              "      <td>94</td>\n",
              "      <td>100</td>\n",
              "      <td>202</td>\n",
              "      <td>380</td>\n",
              "      <td>179</td>\n",
              "      <td>143</td>\n",
              "      <td>28</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12.2</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>2.6</td>\n",
              "      <td>34.6</td>\n",
              "      <td>61.6</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>190</td>\n",
              "      <td>80</td>\n",
              "      <td>88</td>\n",
              "      <td>181</td>\n",
              "      <td>360</td>\n",
              "      <td>177</td>\n",
              "      <td>103</td>\n",
              "      <td>-16</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>13.1</td>\n",
              "      <td>-3.6</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.1</td>\n",
              "      <td>3.9</td>\n",
              "      <td>25.4</td>\n",
              "      <td>62.8</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 275 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f7d34d5c-4d24-41e7-a925-0feba2f00eeb')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f7d34d5c-4d24-41e7-a925-0feba2f00eeb button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f7d34d5c-4d24-41e7-a925-0feba2f00eeb');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 239
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "```\n",
        "# Class code :   Class :     Number of instances:\n",
        "       01             Normal  245\n",
        "       02             Ischemic changes (Coronary Artery Disease)  44\n",
        "       03             Old Anterior Myocardial Infarction  15\n",
        "       04             Old Inferior Myocardial Infarction  15\n",
        "       05             Sinus tachycardy  13\n",
        "       06             Sinus bradycardy  25\n",
        "       07             Ventricular Premature Contraction (PVC) 3\n",
        "       08             Supraventricular Premature Contraction  2\n",
        "       09             Left bundle branch block  9\t\n",
        "       10             Right bundle branch block 50\n",
        "       11             1. degree AtrioVentricular  0\t\n",
        "       12             2. degree AV block  0\n",
        "       13             3. degree AV block  0\n",
        "       14             Left ventricule hypertrophy 4\n",
        "       15             Atrial Fibrillation or Flutter  5\n",
        "       16             Others  22\n",
        "```\n",
        "\n"
      ],
      "metadata": {
        "id": "Pmeqig0vLmoI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['target'] = df[279].apply(lambda x:0 if x==1 else 1)\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 280
        },
        "id": "RytdeRYjJpBS",
        "outputId": "492efcee-4d79-400f-b2b8-2f7e62db1c1e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    0  1    2   3    4    5    6    7    8   9  ...   271  272  273  274  275  \\\n",
              "0  75  0  190  80   91  193  371  174  121 -16  ...   9.0 -0.9  0.0  0.0  0.9   \n",
              "1  56  1  165  64   81  174  401  149   39  25  ...   8.5  0.0  0.0  0.0  0.2   \n",
              "2  54  0  172  95  138  163  386  185  102  96  ...   9.5 -2.4  0.0  0.0  0.3   \n",
              "3  55  0  175  94  100  202  380  179  143  28  ...  12.2 -2.2  0.0  0.0  0.4   \n",
              "4  75  0  190  80   88  181  360  177  103 -16  ...  13.1 -3.6  0.0  0.0 -0.1   \n",
              "\n",
              "   276   277   278  279  target  \n",
              "0  2.9  23.3  49.4    8       1  \n",
              "1  2.1  20.4  38.8    6       1  \n",
              "2  3.4  12.3  49.0   10       1  \n",
              "3  2.6  34.6  61.6    1       0  \n",
              "4  3.9  25.4  62.8    7       1  \n",
              "\n",
              "[5 rows x 276 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3784a071-d609-45a6-8cbd-15656340fbb8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>...</th>\n",
              "      <th>271</th>\n",
              "      <th>272</th>\n",
              "      <th>273</th>\n",
              "      <th>274</th>\n",
              "      <th>275</th>\n",
              "      <th>276</th>\n",
              "      <th>277</th>\n",
              "      <th>278</th>\n",
              "      <th>279</th>\n",
              "      <th>target</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>190</td>\n",
              "      <td>80</td>\n",
              "      <td>91</td>\n",
              "      <td>193</td>\n",
              "      <td>371</td>\n",
              "      <td>174</td>\n",
              "      <td>121</td>\n",
              "      <td>-16</td>\n",
              "      <td>...</td>\n",
              "      <td>9.0</td>\n",
              "      <td>-0.9</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.9</td>\n",
              "      <td>2.9</td>\n",
              "      <td>23.3</td>\n",
              "      <td>49.4</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>56</td>\n",
              "      <td>1</td>\n",
              "      <td>165</td>\n",
              "      <td>64</td>\n",
              "      <td>81</td>\n",
              "      <td>174</td>\n",
              "      <td>401</td>\n",
              "      <td>149</td>\n",
              "      <td>39</td>\n",
              "      <td>25</td>\n",
              "      <td>...</td>\n",
              "      <td>8.5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>2.1</td>\n",
              "      <td>20.4</td>\n",
              "      <td>38.8</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>54</td>\n",
              "      <td>0</td>\n",
              "      <td>172</td>\n",
              "      <td>95</td>\n",
              "      <td>138</td>\n",
              "      <td>163</td>\n",
              "      <td>386</td>\n",
              "      <td>185</td>\n",
              "      <td>102</td>\n",
              "      <td>96</td>\n",
              "      <td>...</td>\n",
              "      <td>9.5</td>\n",
              "      <td>-2.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>3.4</td>\n",
              "      <td>12.3</td>\n",
              "      <td>49.0</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>55</td>\n",
              "      <td>0</td>\n",
              "      <td>175</td>\n",
              "      <td>94</td>\n",
              "      <td>100</td>\n",
              "      <td>202</td>\n",
              "      <td>380</td>\n",
              "      <td>179</td>\n",
              "      <td>143</td>\n",
              "      <td>28</td>\n",
              "      <td>...</td>\n",
              "      <td>12.2</td>\n",
              "      <td>-2.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>2.6</td>\n",
              "      <td>34.6</td>\n",
              "      <td>61.6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>75</td>\n",
              "      <td>0</td>\n",
              "      <td>190</td>\n",
              "      <td>80</td>\n",
              "      <td>88</td>\n",
              "      <td>181</td>\n",
              "      <td>360</td>\n",
              "      <td>177</td>\n",
              "      <td>103</td>\n",
              "      <td>-16</td>\n",
              "      <td>...</td>\n",
              "      <td>13.1</td>\n",
              "      <td>-3.6</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.1</td>\n",
              "      <td>3.9</td>\n",
              "      <td>25.4</td>\n",
              "      <td>62.8</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 276 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3784a071-d609-45a6-8cbd-15656340fbb8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3784a071-d609-45a6-8cbd-15656340fbb8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3784a071-d609-45a6-8cbd-15656340fbb8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 240
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X = df.iloc[:, :-2].values\n",
        "X = scaler.fit_transform(X)\n",
        "y = df.iloc[:, -1].values\n",
        "print(X)\n",
        "print(y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pLw-v2GPBrxG",
        "outputId": "9d7628b9-8326-4eeb-d9d7-5fa33f3aba21"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[ 75.    0.  190.  ...   2.9  23.3  49.4]\n",
            " [ 56.    1.  165.  ...   2.1  20.4  38.8]\n",
            " [ 54.    0.  172.  ...   3.4  12.3  49. ]\n",
            " ...\n",
            " [ 36.    0.  166.  ...   1.  -44.2 -33.2]\n",
            " [ 32.    1.  155.  ...   2.4  25.   46.6]\n",
            " [ 78.    1.  160.  ...   1.6  21.3  32.8]]\n",
            "[1 1 1 0 1 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 1 0 0\n",
            " 1 0 1 0 0 0 0 0 1 1 0 1 0 0 0 1 1 1 1 0 0 1 0 1 1 0 0 0 0 1 0 1 0 1 1 0 0\n",
            " 0 1 1 1 0 0 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 0 0 0 1 0 0 0 1 1 1 0 1 0 0\n",
            " 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 1 1 1 0\n",
            " 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 1 1 0 0 0 1 0 1 0 1 1\n",
            " 1 1 1 1 1 0 0 1 1 0 0 0 1 1 0 1 0 0 0 1 0 0 1 0 1 1 0 1 1 1 0 1 1 1 1 0 0\n",
            " 1 0 1 1 0 1 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 1 0 1 1 1 1 0 0 1 1 1\n",
            " 1 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 1 0 1 1 0 0 0 0 1 1 1 0 0 0 0 0 1 0 1 1 1\n",
            " 1 1 1 0 1 0 1 1 1 0 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 0 1 1 1 0 1 1 0 1 0 0 1\n",
            " 0 1 0 1 0 0 0 1 1 0 1 1 0 1 0 1 0 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0\n",
            " 1 0 1 0 1 1 1 0 0 1 1 1 0 0 1 0 1 1 1 0 0 0 0 0 0 1 0 1 1 0 1 1 0 1 0 0 0\n",
            " 0 0 1 1 1 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1\n",
            " 0 0 0 0 1 1 0 0]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "counts = df['target'].value_counts()\n",
        "contamination = counts[1]/(counts[0] +counts[1])\n",
        "contamination # percentage of outliers"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XzBz3tUDCTav",
        "outputId": "9877a0f6-f3ff-43ae-848f-032c1b6d1f37"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.4579646017699115"
            ]
          },
          "metadata": {},
          "execution_count": 634
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, test_size=0.3, random_state=42)\n",
        "X_train_pd = pd.DataFrame(X_train)\n",
        "X_train_pd.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "T9-ZAzwMCblS",
        "outputId": "77f5dbac-dd96-4fd3-cb68-5345f2b69400"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        0         1         2         3         4         5         6    \\\n",
              "0 -0.393427 -1.107520  0.156533 -0.493009 -0.125126 -0.204334 -0.456032   \n",
              "1  1.552051  0.902918 -0.031998 -0.010279  0.265820  0.487744 -0.426045   \n",
              "2  0.214535  0.902918  0.021868 -0.070621  0.005190 -0.561535  0.473546   \n",
              "3  0.822497  0.902918 -0.166663 -0.432667 -0.516072  0.800295 -0.396059   \n",
              "4 -1.001388  0.902918 -0.220529 -0.674032 -1.037333 -0.405260  0.053737   \n",
              "\n",
              "        7         8         9    ...       264       265       266       267  \\\n",
              "0 -0.279520 -0.038934  1.042790  ...  0.335776  0.508843  0.649172  0.728573   \n",
              "1 -0.869513  0.309929  0.469865  ... -0.161833  0.508843  1.196878  0.178631   \n",
              "2 -0.391899 -0.659136  1.130932  ... -0.327703 -0.585512  0.505039 -0.121337   \n",
              "3 -1.206652  0.348692  0.932612  ...  0.667516  0.508843 -0.388585  0.728573   \n",
              "4 -0.757133 -0.504085 -0.081025  ... -0.493573  0.508843  0.130294  0.728573   \n",
              "\n",
              "        268  269       270       271       272       273  \n",
              "0 -0.079546  0.0  0.821490  0.054515  1.414036  0.986646  \n",
              "1 -0.079546  0.0  0.821490  0.545924  1.139738  1.019125  \n",
              "2 -0.079546  0.0  0.821490 -0.226291  0.057372 -0.236730  \n",
              "3 -0.079546  0.0  0.533427 -0.366693  0.161161 -0.085162  \n",
              "4 -0.079546  0.0 -0.330763 -0.507096  0.257536 -0.188012  \n",
              "\n",
              "[5 rows x 274 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5736f8a9-af5f-4923-8dc4-9fab39c45a20\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>...</th>\n",
              "      <th>264</th>\n",
              "      <th>265</th>\n",
              "      <th>266</th>\n",
              "      <th>267</th>\n",
              "      <th>268</th>\n",
              "      <th>269</th>\n",
              "      <th>270</th>\n",
              "      <th>271</th>\n",
              "      <th>272</th>\n",
              "      <th>273</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-0.393427</td>\n",
              "      <td>-1.107520</td>\n",
              "      <td>0.156533</td>\n",
              "      <td>-0.493009</td>\n",
              "      <td>-0.125126</td>\n",
              "      <td>-0.204334</td>\n",
              "      <td>-0.456032</td>\n",
              "      <td>-0.279520</td>\n",
              "      <td>-0.038934</td>\n",
              "      <td>1.042790</td>\n",
              "      <td>...</td>\n",
              "      <td>0.335776</td>\n",
              "      <td>0.508843</td>\n",
              "      <td>0.649172</td>\n",
              "      <td>0.728573</td>\n",
              "      <td>-0.079546</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.821490</td>\n",
              "      <td>0.054515</td>\n",
              "      <td>1.414036</td>\n",
              "      <td>0.986646</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.552051</td>\n",
              "      <td>0.902918</td>\n",
              "      <td>-0.031998</td>\n",
              "      <td>-0.010279</td>\n",
              "      <td>0.265820</td>\n",
              "      <td>0.487744</td>\n",
              "      <td>-0.426045</td>\n",
              "      <td>-0.869513</td>\n",
              "      <td>0.309929</td>\n",
              "      <td>0.469865</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.161833</td>\n",
              "      <td>0.508843</td>\n",
              "      <td>1.196878</td>\n",
              "      <td>0.178631</td>\n",
              "      <td>-0.079546</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.821490</td>\n",
              "      <td>0.545924</td>\n",
              "      <td>1.139738</td>\n",
              "      <td>1.019125</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.214535</td>\n",
              "      <td>0.902918</td>\n",
              "      <td>0.021868</td>\n",
              "      <td>-0.070621</td>\n",
              "      <td>0.005190</td>\n",
              "      <td>-0.561535</td>\n",
              "      <td>0.473546</td>\n",
              "      <td>-0.391899</td>\n",
              "      <td>-0.659136</td>\n",
              "      <td>1.130932</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.327703</td>\n",
              "      <td>-0.585512</td>\n",
              "      <td>0.505039</td>\n",
              "      <td>-0.121337</td>\n",
              "      <td>-0.079546</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.821490</td>\n",
              "      <td>-0.226291</td>\n",
              "      <td>0.057372</td>\n",
              "      <td>-0.236730</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.822497</td>\n",
              "      <td>0.902918</td>\n",
              "      <td>-0.166663</td>\n",
              "      <td>-0.432667</td>\n",
              "      <td>-0.516072</td>\n",
              "      <td>0.800295</td>\n",
              "      <td>-0.396059</td>\n",
              "      <td>-1.206652</td>\n",
              "      <td>0.348692</td>\n",
              "      <td>0.932612</td>\n",
              "      <td>...</td>\n",
              "      <td>0.667516</td>\n",
              "      <td>0.508843</td>\n",
              "      <td>-0.388585</td>\n",
              "      <td>0.728573</td>\n",
              "      <td>-0.079546</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.533427</td>\n",
              "      <td>-0.366693</td>\n",
              "      <td>0.161161</td>\n",
              "      <td>-0.085162</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-1.001388</td>\n",
              "      <td>0.902918</td>\n",
              "      <td>-0.220529</td>\n",
              "      <td>-0.674032</td>\n",
              "      <td>-1.037333</td>\n",
              "      <td>-0.405260</td>\n",
              "      <td>0.053737</td>\n",
              "      <td>-0.757133</td>\n",
              "      <td>-0.504085</td>\n",
              "      <td>-0.081025</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.493573</td>\n",
              "      <td>0.508843</td>\n",
              "      <td>0.130294</td>\n",
              "      <td>0.728573</td>\n",
              "      <td>-0.079546</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.330763</td>\n",
              "      <td>-0.507096</td>\n",
              "      <td>0.257536</td>\n",
              "      <td>-0.188012</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 274 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5736f8a9-af5f-4923-8dc4-9fab39c45a20')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5736f8a9-af5f-4923-8dc4-9fab39c45a20 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5736f8a9-af5f-4923-8dc4-9fab39c45a20');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 635
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Vowel dataset_NotSure**"
      ],
      "metadata": {
        "id": "DxjCt3xbqJHT"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://archive.ics.uci.edu/ml/machine-learning-databases/undocumented/connectionist-bench/vowel/vowel-context.data\n",
        "\n",
        "    Introduction:\n",
        "    In my work on context-sensitive learning, I used the \"Deterding Vowel\n",
        "    Recognition Data\", but I found it necessary to reformulate the data.\n",
        "    Implicit in the original data is contextual information on the\n",
        "    speaker's gender and identity. For my work, it was necessary to make\n",
        "    this information explicit. The file \"vowel-context.data\" adds the\n",
        "    speaker's sex and identity as new features. The format of the data file\n",
        "    is described below.\n",
        "\n",
        "    Peter Turney\n",
        "    peter@ai.iit.nrc.ca\n",
        "\n",
        "    References:\n",
        "    P. Turney. \"Robust Classification With Context-Sensitive Features.\"\n",
        "    Proceedings of the Sixth International Conference on Industrial\n",
        "    and Engineering Applications of Artificial Intelligence and Expert\n",
        "    Systems (IEA/AIE-93): 268-276. 1993.\n",
        "    URL: ftp://ai.iit.nrc.ca/pub/ksl-papers/NRC-35074.ps.Z\n",
        "\n",
        "    P. Turney. \"Exploiting Context When Learning to Classify.\"\n",
        "    Proceedings of the European Conference on Machine Learning\n",
        "    (ECML-93): 402-407. 1993.\n",
        "    URL: ftp://ai.iit.nrc.ca/pub/ksl-papers/NRC-35058.ps.Z\n",
        "\n"
      ],
      "metadata": {
        "id": "gDRBaYnYuLm-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "datasets"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hVn3m8bNsUUT",
        "outputId": "34183551-d522-4d2c-a9aa-73c91c493b97"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['HTRU_2.csv',\n",
              " 'lymphography.data',\n",
              " 'musk.mat',\n",
              " 'cardio.mat',\n",
              " 'mnist.mat',\n",
              " 'bupa.data',\n",
              " 'badges.data',\n",
              " 'vowel-context.data',\n",
              " 'arrhythmia.data']"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dataset = datasets[7]\n",
        "sep_regex = '\\s{1,2}' # Because the data file has ' ' and '  ' between each column\n",
        "\n",
        "#atasetorig = 'vowel.tr-orig-order'\n",
        "#sep_regex = ','\n",
        "\n",
        "df = pd.read_csv(directory_path + dataset, sep=sep_regex, header=None)\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 478
        },
        "id": "GmlyyPJM_N-H",
        "outputId": "e8c24eca-8938-4993-90e1-205edff28472"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-5-5aa08d700bf7>:7: ParserWarning: Falling back to the 'python' engine because the 'c' engine does not support regex separators (separators > 1 char and different from '\\s+' are interpreted as regex); you can avoid this warning by specifying engine='python'.\n",
            "  df = pd.read_csv(directory_path + dataset, sep=sep_regex, header=None)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     0   1   2      3      4      5      6      7      8      9      10  \\\n",
              "0     0   0   0 -3.639  0.418 -0.670  1.779 -0.168  1.627 -0.388  0.529   \n",
              "1     0   0   0 -3.327  0.496 -0.694  1.365 -0.265  1.933 -0.363  0.510   \n",
              "2     0   0   0 -2.120  0.894 -1.576  0.147 -0.707  1.559 -0.579  0.676   \n",
              "3     0   0   0 -2.287  1.809 -1.498  1.012 -1.053  1.060 -0.567  0.235   \n",
              "4     0   0   0 -2.598  1.938 -0.846  1.062 -1.633  0.764  0.394 -0.150   \n",
              "..   ..  ..  ..    ...    ...    ...    ...    ...    ...    ...    ...   \n",
              "985   1  14   1 -3.239  3.083 -1.427 -0.202 -0.282  1.421  0.576  0.068   \n",
              "986   1  14   1 -3.753  3.605 -0.899 -0.747 -0.401  1.765  0.620  0.754   \n",
              "987   1  14   1 -3.980  2.459  0.068  0.023  0.237  1.029 -0.189  0.521   \n",
              "988   1  14   1 -4.264  2.925  0.065  0.794  0.323  0.515 -1.282 -0.140   \n",
              "989   1  14   1 -3.291  2.324 -0.679  0.285  0.441  0.557 -0.227  0.115   \n",
              "\n",
              "        11     12  13  \n",
              "0   -0.874 -0.814   0  \n",
              "1   -0.621 -0.488   1  \n",
              "2   -0.809 -0.049   2  \n",
              "3   -0.091 -0.795   3  \n",
              "4    0.277 -0.396   4  \n",
              "..     ...    ...  ..  \n",
              "985 -0.914  0.147   6  \n",
              "986 -0.835 -0.301   7  \n",
              "987 -0.773 -0.500   8  \n",
              "988 -0.863 -0.390   9  \n",
              "989 -1.046  0.697  10  \n",
              "\n",
              "[990 rows x 14 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5f41e6fb-bec0-43f1-b73f-ffe8c50bd71c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>10</th>\n",
              "      <th>11</th>\n",
              "      <th>12</th>\n",
              "      <th>13</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-3.639</td>\n",
              "      <td>0.418</td>\n",
              "      <td>-0.670</td>\n",
              "      <td>1.779</td>\n",
              "      <td>-0.168</td>\n",
              "      <td>1.627</td>\n",
              "      <td>-0.388</td>\n",
              "      <td>0.529</td>\n",
              "      <td>-0.874</td>\n",
              "      <td>-0.814</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-3.327</td>\n",
              "      <td>0.496</td>\n",
              "      <td>-0.694</td>\n",
              "      <td>1.365</td>\n",
              "      <td>-0.265</td>\n",
              "      <td>1.933</td>\n",
              "      <td>-0.363</td>\n",
              "      <td>0.510</td>\n",
              "      <td>-0.621</td>\n",
              "      <td>-0.488</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-2.120</td>\n",
              "      <td>0.894</td>\n",
              "      <td>-1.576</td>\n",
              "      <td>0.147</td>\n",
              "      <td>-0.707</td>\n",
              "      <td>1.559</td>\n",
              "      <td>-0.579</td>\n",
              "      <td>0.676</td>\n",
              "      <td>-0.809</td>\n",
              "      <td>-0.049</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-2.287</td>\n",
              "      <td>1.809</td>\n",
              "      <td>-1.498</td>\n",
              "      <td>1.012</td>\n",
              "      <td>-1.053</td>\n",
              "      <td>1.060</td>\n",
              "      <td>-0.567</td>\n",
              "      <td>0.235</td>\n",
              "      <td>-0.091</td>\n",
              "      <td>-0.795</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-2.598</td>\n",
              "      <td>1.938</td>\n",
              "      <td>-0.846</td>\n",
              "      <td>1.062</td>\n",
              "      <td>-1.633</td>\n",
              "      <td>0.764</td>\n",
              "      <td>0.394</td>\n",
              "      <td>-0.150</td>\n",
              "      <td>0.277</td>\n",
              "      <td>-0.396</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>985</th>\n",
              "      <td>1</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>-3.239</td>\n",
              "      <td>3.083</td>\n",
              "      <td>-1.427</td>\n",
              "      <td>-0.202</td>\n",
              "      <td>-0.282</td>\n",
              "      <td>1.421</td>\n",
              "      <td>0.576</td>\n",
              "      <td>0.068</td>\n",
              "      <td>-0.914</td>\n",
              "      <td>0.147</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>986</th>\n",
              "      <td>1</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>-3.753</td>\n",
              "      <td>3.605</td>\n",
              "      <td>-0.899</td>\n",
              "      <td>-0.747</td>\n",
              "      <td>-0.401</td>\n",
              "      <td>1.765</td>\n",
              "      <td>0.620</td>\n",
              "      <td>0.754</td>\n",
              "      <td>-0.835</td>\n",
              "      <td>-0.301</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>987</th>\n",
              "      <td>1</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>-3.980</td>\n",
              "      <td>2.459</td>\n",
              "      <td>0.068</td>\n",
              "      <td>0.023</td>\n",
              "      <td>0.237</td>\n",
              "      <td>1.029</td>\n",
              "      <td>-0.189</td>\n",
              "      <td>0.521</td>\n",
              "      <td>-0.773</td>\n",
              "      <td>-0.500</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>988</th>\n",
              "      <td>1</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>-4.264</td>\n",
              "      <td>2.925</td>\n",
              "      <td>0.065</td>\n",
              "      <td>0.794</td>\n",
              "      <td>0.323</td>\n",
              "      <td>0.515</td>\n",
              "      <td>-1.282</td>\n",
              "      <td>-0.140</td>\n",
              "      <td>-0.863</td>\n",
              "      <td>-0.390</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>989</th>\n",
              "      <td>1</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>-3.291</td>\n",
              "      <td>2.324</td>\n",
              "      <td>-0.679</td>\n",
              "      <td>0.285</td>\n",
              "      <td>0.441</td>\n",
              "      <td>0.557</td>\n",
              "      <td>-0.227</td>\n",
              "      <td>0.115</td>\n",
              "      <td>-1.046</td>\n",
              "      <td>0.697</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>990 rows × 14 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5f41e6fb-bec0-43f1-b73f-ffe8c50bd71c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5f41e6fb-bec0-43f1-b73f-ffe8c50bd71c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5f41e6fb-bec0-43f1-b73f-ffe8c50bd71c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Count the number of NaN values in each row\n",
        "nan_rows = df.isnull().any(axis=1).sum()\n",
        "print(\"Number of rows with NaN values:\", nan_rows)\n",
        "\n",
        "# Count the number of NaN values in each column\n",
        "nan_columns = df.isnull().any(axis=0).sum()\n",
        "print(\"Number of columns with NaN values:\", nan_columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "18xzrPE9kjf6",
        "outputId": "031e4918-2c26-4288-fd70-b4b31d46980b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of rows with NaN values: 0\n",
            "Number of columns with NaN values: 0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\tColumn\t|\tDescription\n",
        "\t-------------------------------\n",
        "\t00\t\tTrain or Test\n",
        "\t01\t\tSpeaker Number\n",
        "\t02\t\tSex\n",
        "\t03\t\tFeature 0\n",
        "\t04\t\tFeature 1\n",
        "\t05\t\tFeature 2\n",
        "\t06\t\tFeature 3\n",
        "\t07\t\tFeature 4\n",
        "\t08\t\tFeature 5\n",
        "\t09\t\tFeature 6\n",
        "\t10\t\tFeature 7\n",
        "\t11\t\tFeature 8\n",
        "\t12\t\tFeature 9\n",
        "\t13\t\tClass\n",
        "\n",
        "  if we have cap => 0 else 1 \n",
        "  \n",
        "    Classes: Number: Binary:\n",
        "\thid\t\t0\t\t  1\n",
        "\thId\t\t1  \t\t0\n",
        "\thEd\t\t2  \t\t0\n",
        "\thAd\t\t3  \t\t0\n",
        "\thYd\t\t4  \t\t0\n",
        "\thad\t\t5  \t\t1\n",
        "\thOd\t\t6  \t\t0\n",
        "\thod\t\t7  \t\t1\n",
        "\thUd\t\t8  \t\t0\t\t \n",
        "\thud\t\t9  \t\t1\n",
        "\thed\t\t10 \t\t1\n",
        "\n"
      ],
      "metadata": {
        "id": "LeTtJU-7aHuF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df['target'] = df.iloc[:, 13].replace({0: 1, 1: 0, 2: 0, 3: 0, 4: 0, 5: 1, 6: 0, 7: 1, 8: 0, 9: 1, 10: 1})\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "ow2XyofjacAO",
        "outputId": "90477298-dd0b-4172-9b10-986510fc37b6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     0   1  2      3      4      5      6      7      8      9     10     11  \\\n",
              "0    0   0  0 -3.639  0.418 -0.670  1.779 -0.168  1.627 -0.388  0.529 -0.874   \n",
              "1    0   0  0 -3.327  0.496 -0.694  1.365 -0.265  1.933 -0.363  0.510 -0.621   \n",
              "2    0   0  0 -2.120  0.894 -1.576  0.147 -0.707  1.559 -0.579  0.676 -0.809   \n",
              "3    0   0  0 -2.287  1.809 -1.498  1.012 -1.053  1.060 -0.567  0.235 -0.091   \n",
              "4    0   0  0 -2.598  1.938 -0.846  1.062 -1.633  0.764  0.394 -0.150  0.277   \n",
              "..  ..  .. ..    ...    ...    ...    ...    ...    ...    ...    ...    ...   \n",
              "985  1  14  1 -3.239  3.083 -1.427 -0.202 -0.282  1.421  0.576  0.068 -0.914   \n",
              "986  1  14  1 -3.753  3.605 -0.899 -0.747 -0.401  1.765  0.620  0.754 -0.835   \n",
              "987  1  14  1 -3.980  2.459  0.068  0.023  0.237  1.029 -0.189  0.521 -0.773   \n",
              "988  1  14  1 -4.264  2.925  0.065  0.794  0.323  0.515 -1.282 -0.140 -0.863   \n",
              "989  1  14  1 -3.291  2.324 -0.679  0.285  0.441  0.557 -0.227  0.115 -1.046   \n",
              "\n",
              "        12  13  target  \n",
              "0   -0.814   0       1  \n",
              "1   -0.488   1       0  \n",
              "2   -0.049   2       0  \n",
              "3   -0.795   3       0  \n",
              "4   -0.396   4       0  \n",
              "..     ...  ..     ...  \n",
              "985  0.147   6       0  \n",
              "986 -0.301   7       1  \n",
              "987 -0.500   8       0  \n",
              "988 -0.390   9       1  \n",
              "989  0.697  10       1  \n",
              "\n",
              "[990 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2f6c4dae-a19a-4742-b7db-caab3ff33d88\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>10</th>\n",
              "      <th>11</th>\n",
              "      <th>12</th>\n",
              "      <th>13</th>\n",
              "      <th>target</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-3.639</td>\n",
              "      <td>0.418</td>\n",
              "      <td>-0.670</td>\n",
              "      <td>1.779</td>\n",
              "      <td>-0.168</td>\n",
              "      <td>1.627</td>\n",
              "      <td>-0.388</td>\n",
              "      <td>0.529</td>\n",
              "      <td>-0.874</td>\n",
              "      <td>-0.814</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-3.327</td>\n",
              "      <td>0.496</td>\n",
              "      <td>-0.694</td>\n",
              "      <td>1.365</td>\n",
              "      <td>-0.265</td>\n",
              "      <td>1.933</td>\n",
              "      <td>-0.363</td>\n",
              "      <td>0.510</td>\n",
              "      <td>-0.621</td>\n",
              "      <td>-0.488</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-2.120</td>\n",
              "      <td>0.894</td>\n",
              "      <td>-1.576</td>\n",
              "      <td>0.147</td>\n",
              "      <td>-0.707</td>\n",
              "      <td>1.559</td>\n",
              "      <td>-0.579</td>\n",
              "      <td>0.676</td>\n",
              "      <td>-0.809</td>\n",
              "      <td>-0.049</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-2.287</td>\n",
              "      <td>1.809</td>\n",
              "      <td>-1.498</td>\n",
              "      <td>1.012</td>\n",
              "      <td>-1.053</td>\n",
              "      <td>1.060</td>\n",
              "      <td>-0.567</td>\n",
              "      <td>0.235</td>\n",
              "      <td>-0.091</td>\n",
              "      <td>-0.795</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>-2.598</td>\n",
              "      <td>1.938</td>\n",
              "      <td>-0.846</td>\n",
              "      <td>1.062</td>\n",
              "      <td>-1.633</td>\n",
              "      <td>0.764</td>\n",
              "      <td>0.394</td>\n",
              "      <td>-0.150</td>\n",
              "      <td>0.277</td>\n",
              "      <td>-0.396</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>985</th>\n",
              "      <td>1</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>-3.239</td>\n",
              "      <td>3.083</td>\n",
              "      <td>-1.427</td>\n",
              "      <td>-0.202</td>\n",
              "      <td>-0.282</td>\n",
              "      <td>1.421</td>\n",
              "      <td>0.576</td>\n",
              "      <td>0.068</td>\n",
              "      <td>-0.914</td>\n",
              "      <td>0.147</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>986</th>\n",
              "      <td>1</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>-3.753</td>\n",
              "      <td>3.605</td>\n",
              "      <td>-0.899</td>\n",
              "      <td>-0.747</td>\n",
              "      <td>-0.401</td>\n",
              "      <td>1.765</td>\n",
              "      <td>0.620</td>\n",
              "      <td>0.754</td>\n",
              "      <td>-0.835</td>\n",
              "      <td>-0.301</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>987</th>\n",
              "      <td>1</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>-3.980</td>\n",
              "      <td>2.459</td>\n",
              "      <td>0.068</td>\n",
              "      <td>0.023</td>\n",
              "      <td>0.237</td>\n",
              "      <td>1.029</td>\n",
              "      <td>-0.189</td>\n",
              "      <td>0.521</td>\n",
              "      <td>-0.773</td>\n",
              "      <td>-0.500</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>988</th>\n",
              "      <td>1</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>-4.264</td>\n",
              "      <td>2.925</td>\n",
              "      <td>0.065</td>\n",
              "      <td>0.794</td>\n",
              "      <td>0.323</td>\n",
              "      <td>0.515</td>\n",
              "      <td>-1.282</td>\n",
              "      <td>-0.140</td>\n",
              "      <td>-0.863</td>\n",
              "      <td>-0.390</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>989</th>\n",
              "      <td>1</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>-3.291</td>\n",
              "      <td>2.324</td>\n",
              "      <td>-0.679</td>\n",
              "      <td>0.285</td>\n",
              "      <td>0.441</td>\n",
              "      <td>0.557</td>\n",
              "      <td>-0.227</td>\n",
              "      <td>0.115</td>\n",
              "      <td>-1.046</td>\n",
              "      <td>0.697</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>990 rows × 15 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2f6c4dae-a19a-4742-b7db-caab3ff33d88')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-2f6c4dae-a19a-4742-b7db-caab3ff33d88 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-2f6c4dae-a19a-4742-b7db-caab3ff33d88');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\tSet\t|\tNumber\n",
        "\t-------------------\n",
        "\tTrain\t\t0\n",
        "\tTest\t\t 1\n"
      ],
      "metadata": {
        "id": "txoA5iEyacQR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# fit and transform the selected columns\n",
        "cols_to_scale = df.columns[3:13]\n",
        "df[cols_to_scale] = scaler.fit_transform(df[cols_to_scale])\n",
        "\n",
        "# split the data into train and test sets\n",
        "train_set = df[df[0] == 0]\n",
        "test_set = df[df[0] == 1]\n",
        "\n",
        "# separate the features (X) from the targets (y)\n",
        "X_train = train_set.iloc[:, 3:13].values\n",
        "y_train = train_set.iloc[:, 14].values\n",
        "X_test = test_set.iloc[:, 3:13].values\n",
        "y_test = test_set.iloc[:, 14].values"
      ],
      "metadata": {
        "id": "0fMO8ju6lsNB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(X_train)\n",
        "print(X_test)\n",
        "print(y_train)\n",
        "print(y_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2hVtV6XslxLh",
        "outputId": "e0e4414c-b054-4bf6-fc75-0ce1083ad760"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[-0.50113464 -1.24609747 -0.22798328 ...  0.3358522  -1.00201915\n",
            "  -1.23022154]\n",
            " [-0.14191451 -1.17969631 -0.26171064 ...  0.30269411 -0.55806104\n",
            "  -0.69020068]\n",
            " [ 1.24776079 -0.84088014 -1.50119087 ...  0.59239116 -0.88795876\n",
            "   0.03700533]\n",
            " ...\n",
            " [-1.66629737  2.01266713 -0.44299516 ... -0.42329368 -1.82500869\n",
            "   0.42462767]\n",
            " [-2.1072631   2.64858592 -1.58129334 ... -1.47388178  0.03505296\n",
            "   0.62175185]\n",
            " [-1.21727221 -0.04662011  0.03621432 ... -0.50008085  0.33511951\n",
            "   0.64991245]]\n",
            "[[ 2.36571831 -2.37151199 -2.08017711 ...  1.4998759   0.00522179\n",
            "  -0.65541406]\n",
            " [ 0.68014694 -1.6802589  -0.04529345 ... -0.13883212 -0.12638635\n",
            "  -0.88235534]\n",
            " [ 0.80449236 -1.06391993 -0.11977469 ... -0.27146451 -0.10532905\n",
            "  -1.14739626]\n",
            " ...\n",
            " [-0.89374382  0.49139954  0.80913284 ...  0.3218909  -0.82478686\n",
            "  -0.71007875]\n",
            " [-1.22072625  0.8881039   0.80491692 ... -0.83166181 -0.98271662\n",
            "  -0.52786312]\n",
            " [-0.10046604  0.37647445 -0.24063104 ... -0.38664526 -1.30384047\n",
            "   1.2727586 ]]\n",
            "[1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0\n",
            " 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1\n",
            " 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1\n",
            " 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0\n",
            " 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0\n",
            " 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0\n",
            " 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1\n",
            " 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1\n",
            " 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0\n",
            " 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0\n",
            " 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1\n",
            " 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0\n",
            " 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1\n",
            " 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1\n",
            " 0 0 0 0 1 0 1 0 1 1]\n",
            "[1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0\n",
            " 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1\n",
            " 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1\n",
            " 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0\n",
            " 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0\n",
            " 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0\n",
            " 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1\n",
            " 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1\n",
            " 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0\n",
            " 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0\n",
            " 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1\n",
            " 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0\n",
            " 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 0 1 1]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "counts = df['target'].value_counts()\n",
        "contamination = counts[1]/(counts[0] +counts[1])\n",
        "print('percentage of outliers:',contamination)\n",
        "\n",
        "X_train_pd = pd.DataFrame(X_train)\n",
        "X_train_pd.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 224
        },
        "id": "PaT5s6LklEcY",
        "outputId": "83a9f983-7b89-45e1-c526-b4a2d59353ab"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "percentage of outliers: 0.45454545454545453\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          0         1         2         3         4         5         6  \\\n",
              "0 -0.501135 -1.246097 -0.227983  1.664981  0.207232  1.651444 -0.830931   \n",
              "1 -0.141915 -1.179696 -0.261711  1.119439  0.061207  2.158431 -0.776782   \n",
              "2  1.247761 -0.840880 -1.501191 -0.485563 -0.604189  1.538780 -1.244625   \n",
              "3  1.055486 -0.061943 -1.391577  0.654278 -1.125064  0.712027 -1.218634   \n",
              "4  0.697417  0.047874 -0.475317  0.720165 -1.998208  0.221609  0.862834   \n",
              "\n",
              "          7         8         9  \n",
              "0  0.335852 -1.002019 -1.230222  \n",
              "1  0.302694 -0.558061 -0.690201  \n",
              "2  0.592391 -0.887959  0.037005  \n",
              "3 -0.177226  0.371970 -1.198748  \n",
              "4 -0.849113  1.017727 -0.537802  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8535a303-d30a-42c0-804d-6c931ad6c61a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-0.501135</td>\n",
              "      <td>-1.246097</td>\n",
              "      <td>-0.227983</td>\n",
              "      <td>1.664981</td>\n",
              "      <td>0.207232</td>\n",
              "      <td>1.651444</td>\n",
              "      <td>-0.830931</td>\n",
              "      <td>0.335852</td>\n",
              "      <td>-1.002019</td>\n",
              "      <td>-1.230222</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-0.141915</td>\n",
              "      <td>-1.179696</td>\n",
              "      <td>-0.261711</td>\n",
              "      <td>1.119439</td>\n",
              "      <td>0.061207</td>\n",
              "      <td>2.158431</td>\n",
              "      <td>-0.776782</td>\n",
              "      <td>0.302694</td>\n",
              "      <td>-0.558061</td>\n",
              "      <td>-0.690201</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.247761</td>\n",
              "      <td>-0.840880</td>\n",
              "      <td>-1.501191</td>\n",
              "      <td>-0.485563</td>\n",
              "      <td>-0.604189</td>\n",
              "      <td>1.538780</td>\n",
              "      <td>-1.244625</td>\n",
              "      <td>0.592391</td>\n",
              "      <td>-0.887959</td>\n",
              "      <td>0.037005</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.055486</td>\n",
              "      <td>-0.061943</td>\n",
              "      <td>-1.391577</td>\n",
              "      <td>0.654278</td>\n",
              "      <td>-1.125064</td>\n",
              "      <td>0.712027</td>\n",
              "      <td>-1.218634</td>\n",
              "      <td>-0.177226</td>\n",
              "      <td>0.371970</td>\n",
              "      <td>-1.198748</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.697417</td>\n",
              "      <td>0.047874</td>\n",
              "      <td>-0.475317</td>\n",
              "      <td>0.720165</td>\n",
              "      <td>-1.998208</td>\n",
              "      <td>0.221609</td>\n",
              "      <td>0.862834</td>\n",
              "      <td>-0.849113</td>\n",
              "      <td>1.017727</td>\n",
              "      <td>-0.537802</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8535a303-d30a-42c0-804d-6c931ad6c61a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8535a303-d30a-42c0-804d-6c931ad6c61a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8535a303-d30a-42c0-804d-6c931ad6c61a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Default of credit card clients Data Set**"
      ],
      "metadata": {
        "id": "XiXBJwe5WGjn"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Data Set Information**:\n",
        "\n",
        "This research aimed at the case of customersâ€™ default payments in Taiwan and compares the predictive accuracy of probability of default among six data mining methods. From the perspective of risk management, the result of predictive accuracy of the estimated probability of default will be more valuable than the binary result of classification - credible or not credible clients. Because the real probability of default is unknown, this study presented the novel â€œSorting Smoothing Methodâ€ to estimate the real probability of default. With the real probability of default as the response variable (Y), and the predictive probability of default as the independent variable (X), the simple linear regression result (Y = A + BX) shows that the forecasting model produced by artificial neural network has the highest coefficient of determination; its regression intercept (A) is close to zero, and regression coefficient (B) to one. Therefore, among the six data mining techniques, artificial neural network is the only one that can accurately estimate the real probability of default.\n",
        "\n",
        "**Attribute Information**:\n",
        "\n",
        "This research employed a binary variable, default payment (Yes = 1, No = 0), as the response variable. This study reviewed the literature and used the following 23 variables as explanatory variables:\n",
        "X1: Amount of the given credit (NT dollar): it includes both the individual consumer credit and his/her family (supplementary) credit.\n",
        "X2: Gender (1 = male; 2 = female).\n",
        "X3: Education (1 = graduate school; 2 = university; 3 = high school; 4 = others).\n",
        "X4: Marital status (1 = married; 2 = single; 3 = others).\n",
        "X5: Age (year).\n",
        "X6 - X11: History of past payment. We tracked the past monthly payment records (from April to September, 2005) as follows: X6 = the repayment status in September, 2005; X7 = the repayment status in August, 2005; . . .;X11 = the repayment status in April, 2005. The measurement scale for the repayment status is: -1 = pay duly; 1 = payment delay for one month; 2 = payment delay for two months; . . .; 8 = payment delay for eight months; 9 = payment delay for nine months and above.\n",
        "X12-X17: Amount of bill statement (NT dollar). X12 = amount of bill statement in September, 2005; X13 = amount of bill statement in August, 2005; . . .; X17 = amount of bill statement in April, 2005.\n",
        "X18-X23: Amount of previous payment (NT dollar). X18 = amount paid in September, 2005; X19 = amount paid in August, 2005; . . .;X23 = amount paid in April, 2005."
      ],
      "metadata": {
        "id": "8KIpbecvWQ16"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataset = datasets[9]\n",
        "print(dataset)\n",
        "df = pd.read_excel(directory_path + dataset, header=None) \n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 441
        },
        "id": "BmKxNHyCWdpD",
        "outputId": "54b3f723-7899-46df-ebae-3ffb6d379178"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "doccc.xls\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          0          1    2          3         4    5      6      7      8   \\\n",
              "0        NaN         X1   X2         X3        X4   X5     X6     X7     X8   \n",
              "1         ID  LIMIT_BAL  SEX  EDUCATION  MARRIAGE  AGE  PAY_0  PAY_2  PAY_3   \n",
              "2          1      20000    2          2         1   24      2      2     -1   \n",
              "3          2     120000    2          2         2   26     -1      2      0   \n",
              "4          3      90000    2          2         2   34      0      0      0   \n",
              "...      ...        ...  ...        ...       ...  ...    ...    ...    ...   \n",
              "29997  29996     220000    1          3         1   39      0      0      0   \n",
              "29998  29997     150000    1          3         2   43     -1     -1     -1   \n",
              "29999  29998      30000    1          2         2   37      4      3      2   \n",
              "30000  29999      80000    1          3         1   41      1     -1      0   \n",
              "30001  30000      50000    1          2         1   46      0      0      0   \n",
              "\n",
              "          9   ...         15         16         17        18        19  \\\n",
              "0         X9  ...        X15        X16        X17       X18       X19   \n",
              "1      PAY_4  ...  BILL_AMT4  BILL_AMT5  BILL_AMT6  PAY_AMT1  PAY_AMT2   \n",
              "2         -1  ...          0          0          0         0       689   \n",
              "3          0  ...       3272       3455       3261         0      1000   \n",
              "4          0  ...      14331      14948      15549      1518      1500   \n",
              "...      ...  ...        ...        ...        ...       ...       ...   \n",
              "29997      0  ...      88004      31237      15980      8500     20000   \n",
              "29998     -1  ...       8979       5190          0      1837      3526   \n",
              "29999     -1  ...      20878      20582      19357         0         0   \n",
              "30000      0  ...      52774      11855      48944     85900      3409   \n",
              "30001      0  ...      36535      32428      15313      2078      1800   \n",
              "\n",
              "             20        21        22        23                          24  \n",
              "0           X20       X21       X22       X23                           Y  \n",
              "1      PAY_AMT3  PAY_AMT4  PAY_AMT5  PAY_AMT6  default payment next month  \n",
              "2             0         0         0         0                           1  \n",
              "3          1000      1000         0      2000                           1  \n",
              "4          1000      1000      1000      5000                           0  \n",
              "...         ...       ...       ...       ...                         ...  \n",
              "29997      5003      3047      5000      1000                           0  \n",
              "29998      8998       129         0         0                           0  \n",
              "29999     22000      4200      2000      3100                           1  \n",
              "30000      1178      1926     52964      1804                           1  \n",
              "30001      1430      1000      1000      1000                           1  \n",
              "\n",
              "[30002 rows x 25 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-91906fe9-0830-4185-bf7c-24b21032981f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>...</th>\n",
              "      <th>15</th>\n",
              "      <th>16</th>\n",
              "      <th>17</th>\n",
              "      <th>18</th>\n",
              "      <th>19</th>\n",
              "      <th>20</th>\n",
              "      <th>21</th>\n",
              "      <th>22</th>\n",
              "      <th>23</th>\n",
              "      <th>24</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>X1</td>\n",
              "      <td>X2</td>\n",
              "      <td>X3</td>\n",
              "      <td>X4</td>\n",
              "      <td>X5</td>\n",
              "      <td>X6</td>\n",
              "      <td>X7</td>\n",
              "      <td>X8</td>\n",
              "      <td>X9</td>\n",
              "      <td>...</td>\n",
              "      <td>X15</td>\n",
              "      <td>X16</td>\n",
              "      <td>X17</td>\n",
              "      <td>X18</td>\n",
              "      <td>X19</td>\n",
              "      <td>X20</td>\n",
              "      <td>X21</td>\n",
              "      <td>X22</td>\n",
              "      <td>X23</td>\n",
              "      <td>Y</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>ID</td>\n",
              "      <td>LIMIT_BAL</td>\n",
              "      <td>SEX</td>\n",
              "      <td>EDUCATION</td>\n",
              "      <td>MARRIAGE</td>\n",
              "      <td>AGE</td>\n",
              "      <td>PAY_0</td>\n",
              "      <td>PAY_2</td>\n",
              "      <td>PAY_3</td>\n",
              "      <td>PAY_4</td>\n",
              "      <td>...</td>\n",
              "      <td>BILL_AMT4</td>\n",
              "      <td>BILL_AMT5</td>\n",
              "      <td>BILL_AMT6</td>\n",
              "      <td>PAY_AMT1</td>\n",
              "      <td>PAY_AMT2</td>\n",
              "      <td>PAY_AMT3</td>\n",
              "      <td>PAY_AMT4</td>\n",
              "      <td>PAY_AMT5</td>\n",
              "      <td>PAY_AMT6</td>\n",
              "      <td>default payment next month</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>20000</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>24</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>-1</td>\n",
              "      <td>-1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>689</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2</td>\n",
              "      <td>120000</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>26</td>\n",
              "      <td>-1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>3272</td>\n",
              "      <td>3455</td>\n",
              "      <td>3261</td>\n",
              "      <td>0</td>\n",
              "      <td>1000</td>\n",
              "      <td>1000</td>\n",
              "      <td>1000</td>\n",
              "      <td>0</td>\n",
              "      <td>2000</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3</td>\n",
              "      <td>90000</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>34</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>14331</td>\n",
              "      <td>14948</td>\n",
              "      <td>15549</td>\n",
              "      <td>1518</td>\n",
              "      <td>1500</td>\n",
              "      <td>1000</td>\n",
              "      <td>1000</td>\n",
              "      <td>1000</td>\n",
              "      <td>5000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29997</th>\n",
              "      <td>29996</td>\n",
              "      <td>220000</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>39</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>88004</td>\n",
              "      <td>31237</td>\n",
              "      <td>15980</td>\n",
              "      <td>8500</td>\n",
              "      <td>20000</td>\n",
              "      <td>5003</td>\n",
              "      <td>3047</td>\n",
              "      <td>5000</td>\n",
              "      <td>1000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29998</th>\n",
              "      <td>29997</td>\n",
              "      <td>150000</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>43</td>\n",
              "      <td>-1</td>\n",
              "      <td>-1</td>\n",
              "      <td>-1</td>\n",
              "      <td>-1</td>\n",
              "      <td>...</td>\n",
              "      <td>8979</td>\n",
              "      <td>5190</td>\n",
              "      <td>0</td>\n",
              "      <td>1837</td>\n",
              "      <td>3526</td>\n",
              "      <td>8998</td>\n",
              "      <td>129</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29999</th>\n",
              "      <td>29998</td>\n",
              "      <td>30000</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>37</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>-1</td>\n",
              "      <td>...</td>\n",
              "      <td>20878</td>\n",
              "      <td>20582</td>\n",
              "      <td>19357</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>22000</td>\n",
              "      <td>4200</td>\n",
              "      <td>2000</td>\n",
              "      <td>3100</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30000</th>\n",
              "      <td>29999</td>\n",
              "      <td>80000</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>-1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>52774</td>\n",
              "      <td>11855</td>\n",
              "      <td>48944</td>\n",
              "      <td>85900</td>\n",
              "      <td>3409</td>\n",
              "      <td>1178</td>\n",
              "      <td>1926</td>\n",
              "      <td>52964</td>\n",
              "      <td>1804</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30001</th>\n",
              "      <td>30000</td>\n",
              "      <td>50000</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>46</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>36535</td>\n",
              "      <td>32428</td>\n",
              "      <td>15313</td>\n",
              "      <td>2078</td>\n",
              "      <td>1800</td>\n",
              "      <td>1430</td>\n",
              "      <td>1000</td>\n",
              "      <td>1000</td>\n",
              "      <td>1000</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>30002 rows × 25 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-91906fe9-0830-4185-bf7c-24b21032981f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-91906fe9-0830-4185-bf7c-24b21032981f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-91906fe9-0830-4185-bf7c-24b21032981f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.iloc[2:, 1:].reset_index(drop=True)\n",
        "df.columns = range(df.shape[1])\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "UGE90I1nbgmV",
        "outputId": "cbaf8c31-b221-4ce7-ad8d-07da61eff263"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           0  1  2  3   4   5   6   7   8   9   ...     14     15     16  \\\n",
              "0       20000  2  2  1  24   2   2  -1  -1  -2  ...      0      0      0   \n",
              "1      120000  2  2  2  26  -1   2   0   0   0  ...   3272   3455   3261   \n",
              "2       90000  2  2  2  34   0   0   0   0   0  ...  14331  14948  15549   \n",
              "3       50000  2  2  1  37   0   0   0   0   0  ...  28314  28959  29547   \n",
              "4       50000  1  2  1  57  -1   0  -1   0   0  ...  20940  19146  19131   \n",
              "...       ... .. .. ..  ..  ..  ..  ..  ..  ..  ...    ...    ...    ...   \n",
              "29995  220000  1  3  1  39   0   0   0   0   0  ...  88004  31237  15980   \n",
              "29996  150000  1  3  2  43  -1  -1  -1  -1   0  ...   8979   5190      0   \n",
              "29997   30000  1  2  2  37   4   3   2  -1   0  ...  20878  20582  19357   \n",
              "29998   80000  1  3  1  41   1  -1   0   0   0  ...  52774  11855  48944   \n",
              "29999   50000  1  2  1  46   0   0   0   0   0  ...  36535  32428  15313   \n",
              "\n",
              "          17     18     19    20     21    22 23  \n",
              "0          0    689      0     0      0     0  1  \n",
              "1          0   1000   1000  1000      0  2000  1  \n",
              "2       1518   1500   1000  1000   1000  5000  0  \n",
              "3       2000   2019   1200  1100   1069  1000  0  \n",
              "4       2000  36681  10000  9000    689   679  0  \n",
              "...      ...    ...    ...   ...    ...   ... ..  \n",
              "29995   8500  20000   5003  3047   5000  1000  0  \n",
              "29996   1837   3526   8998   129      0     0  0  \n",
              "29997      0      0  22000  4200   2000  3100  1  \n",
              "29998  85900   3409   1178  1926  52964  1804  1  \n",
              "29999   2078   1800   1430  1000   1000  1000  1  \n",
              "\n",
              "[30000 rows x 24 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ad0f7b15-a613-42f7-abd8-4214c45c7581\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>...</th>\n",
              "      <th>14</th>\n",
              "      <th>15</th>\n",
              "      <th>16</th>\n",
              "      <th>17</th>\n",
              "      <th>18</th>\n",
              "      <th>19</th>\n",
              "      <th>20</th>\n",
              "      <th>21</th>\n",
              "      <th>22</th>\n",
              "      <th>23</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>20000</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>24</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>-1</td>\n",
              "      <td>-1</td>\n",
              "      <td>-2</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>689</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>120000</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>26</td>\n",
              "      <td>-1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>3272</td>\n",
              "      <td>3455</td>\n",
              "      <td>3261</td>\n",
              "      <td>0</td>\n",
              "      <td>1000</td>\n",
              "      <td>1000</td>\n",
              "      <td>1000</td>\n",
              "      <td>0</td>\n",
              "      <td>2000</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>90000</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>34</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>14331</td>\n",
              "      <td>14948</td>\n",
              "      <td>15549</td>\n",
              "      <td>1518</td>\n",
              "      <td>1500</td>\n",
              "      <td>1000</td>\n",
              "      <td>1000</td>\n",
              "      <td>1000</td>\n",
              "      <td>5000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>50000</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>37</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>28314</td>\n",
              "      <td>28959</td>\n",
              "      <td>29547</td>\n",
              "      <td>2000</td>\n",
              "      <td>2019</td>\n",
              "      <td>1200</td>\n",
              "      <td>1100</td>\n",
              "      <td>1069</td>\n",
              "      <td>1000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>50000</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>57</td>\n",
              "      <td>-1</td>\n",
              "      <td>0</td>\n",
              "      <td>-1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>20940</td>\n",
              "      <td>19146</td>\n",
              "      <td>19131</td>\n",
              "      <td>2000</td>\n",
              "      <td>36681</td>\n",
              "      <td>10000</td>\n",
              "      <td>9000</td>\n",
              "      <td>689</td>\n",
              "      <td>679</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29995</th>\n",
              "      <td>220000</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>39</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>88004</td>\n",
              "      <td>31237</td>\n",
              "      <td>15980</td>\n",
              "      <td>8500</td>\n",
              "      <td>20000</td>\n",
              "      <td>5003</td>\n",
              "      <td>3047</td>\n",
              "      <td>5000</td>\n",
              "      <td>1000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29996</th>\n",
              "      <td>150000</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>43</td>\n",
              "      <td>-1</td>\n",
              "      <td>-1</td>\n",
              "      <td>-1</td>\n",
              "      <td>-1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>8979</td>\n",
              "      <td>5190</td>\n",
              "      <td>0</td>\n",
              "      <td>1837</td>\n",
              "      <td>3526</td>\n",
              "      <td>8998</td>\n",
              "      <td>129</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29997</th>\n",
              "      <td>30000</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>37</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>-1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>20878</td>\n",
              "      <td>20582</td>\n",
              "      <td>19357</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>22000</td>\n",
              "      <td>4200</td>\n",
              "      <td>2000</td>\n",
              "      <td>3100</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29998</th>\n",
              "      <td>80000</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>41</td>\n",
              "      <td>1</td>\n",
              "      <td>-1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>52774</td>\n",
              "      <td>11855</td>\n",
              "      <td>48944</td>\n",
              "      <td>85900</td>\n",
              "      <td>3409</td>\n",
              "      <td>1178</td>\n",
              "      <td>1926</td>\n",
              "      <td>52964</td>\n",
              "      <td>1804</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29999</th>\n",
              "      <td>50000</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>46</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>36535</td>\n",
              "      <td>32428</td>\n",
              "      <td>15313</td>\n",
              "      <td>2078</td>\n",
              "      <td>1800</td>\n",
              "      <td>1430</td>\n",
              "      <td>1000</td>\n",
              "      <td>1000</td>\n",
              "      <td>1000</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>30000 rows × 24 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ad0f7b15-a613-42f7-abd8-4214c45c7581')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ad0f7b15-a613-42f7-abd8-4214c45c7581 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ad0f7b15-a613-42f7-abd8-4214c45c7581');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Count the number of NaN values in each row\n",
        "nan_rows = df.isnull().any(axis=1).sum()\n",
        "print(\"Number of rows with NaN values:\", nan_rows)\n",
        "\n",
        "# Count the number of NaN values in each column\n",
        "nan_columns = df.isnull().any(axis=0).sum()\n",
        "print(\"Number of columns with NaN values:\", nan_columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "m1BjBwkFgwmD",
        "outputId": "7fb9fa6b-b3a7-484a-dc3a-74c572275b52"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of rows with NaN values: 0\n",
            "Number of columns with NaN values: 0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X = df.iloc[:, :-1].values\n",
        "X = scaler.fit_transform(X)\n",
        "y = df.iloc[:, -1].values\n",
        "print(X)\n",
        "print(y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-2y9XQQ0erbK",
        "outputId": "f9f0701d-3f21-4bbe-9ec7-43da26b74ab4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[-1.13672015  0.81016074  0.18582826 ... -0.30806256 -0.31413612\n",
            "  -0.29338206]\n",
            " [-0.3659805   0.81016074  0.18582826 ... -0.24422965 -0.31413612\n",
            "  -0.18087821]\n",
            " [-0.59720239  0.81016074  0.18582826 ... -0.24422965 -0.24868274\n",
            "  -0.01212243]\n",
            " ...\n",
            " [-1.05964618 -1.23432296  0.18582826 ... -0.03996431 -0.18322937\n",
            "  -0.11900109]\n",
            " [-0.67427636 -1.23432296  1.45111372 ... -0.18512036  3.15253642\n",
            "  -0.19190359]\n",
            " [-0.90549825 -1.23432296  0.18582826 ... -0.24422965 -0.24868274\n",
            "  -0.23713013]]\n",
            "[1 1 0 ... 1 1 1]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "counts = df[23].value_counts()\n",
        "contamination = counts[1]/(counts[0] +counts[1])\n",
        "contamination # percentage of outliers"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zYiR1imyfyDG",
        "outputId": "c8ba7aa5-0a9b-4d2c-f679-7814195db783"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.2212"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, test_size=0.3, random_state=42)\n",
        "X_train_pd = pd.DataFrame(X_train)\n",
        "X_train_pd.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 236
        },
        "id": "lWayhb_MgGSG",
        "outputId": "bbcbb6b3-22ba-4247-82f1-779d56cfe54f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         0         1         2         3         4         5         6   \\\n",
              "0 -0.057685  0.810161  0.185828  0.858557 -0.378129  0.014861  0.111736   \n",
              "1 -0.520128  0.810161 -1.079457  0.858557 -0.595102  0.014861  0.111736   \n",
              "2 -0.674276 -1.234323 -1.079457  0.858557 -0.703588  0.014861  0.111736   \n",
              "3 -1.136720  0.810161  0.185828 -1.057295 -0.920561  0.014861  0.111736   \n",
              "4 -0.905498  0.810161 -1.079457  0.858557 -0.595102 -1.764843 -1.558876   \n",
              "\n",
              "         7         8         9   ...        13        14        15        16  \\\n",
              "0  0.138865  0.188746  0.234917  ...  1.562994  1.709436  1.914918  1.963730   \n",
              "1  0.138865  0.188746  1.999879  ... -0.068209  0.128646  0.168951  0.230319   \n",
              "2  0.138865  0.188746  0.234917  ...  0.248944  0.034074  0.031574  0.066029   \n",
              "3 -0.696663 -0.666599 -1.530046  ... -0.666681 -0.672497 -0.663059 -0.652724   \n",
              "4 -1.532192 -1.521944 -1.530046  ... -0.677929 -0.672497 -0.663059 -0.652724   \n",
              "\n",
              "         17        18        19        20        21        22  \n",
              "0  0.020312  0.003422  0.021260  0.074935  0.078584  0.016004  \n",
              "1 -0.040064  0.177029  0.271165 -0.308063 -0.127856 -0.184478  \n",
              "2 -0.142702 -0.148485 -0.208426 -0.205930 -0.209411 -0.203379  \n",
              "3 -0.281204 -0.223136 -0.296801 -0.308063 -0.314136 -0.293382  \n",
              "4 -0.216964 -0.256990 -0.296801 -0.308063 -0.314136 -0.293382  \n",
              "\n",
              "[5 rows x 23 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e008f530-c8af-4baf-b071-ec5128f25533\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>...</th>\n",
              "      <th>13</th>\n",
              "      <th>14</th>\n",
              "      <th>15</th>\n",
              "      <th>16</th>\n",
              "      <th>17</th>\n",
              "      <th>18</th>\n",
              "      <th>19</th>\n",
              "      <th>20</th>\n",
              "      <th>21</th>\n",
              "      <th>22</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-0.057685</td>\n",
              "      <td>0.810161</td>\n",
              "      <td>0.185828</td>\n",
              "      <td>0.858557</td>\n",
              "      <td>-0.378129</td>\n",
              "      <td>0.014861</td>\n",
              "      <td>0.111736</td>\n",
              "      <td>0.138865</td>\n",
              "      <td>0.188746</td>\n",
              "      <td>0.234917</td>\n",
              "      <td>...</td>\n",
              "      <td>1.562994</td>\n",
              "      <td>1.709436</td>\n",
              "      <td>1.914918</td>\n",
              "      <td>1.963730</td>\n",
              "      <td>0.020312</td>\n",
              "      <td>0.003422</td>\n",
              "      <td>0.021260</td>\n",
              "      <td>0.074935</td>\n",
              "      <td>0.078584</td>\n",
              "      <td>0.016004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-0.520128</td>\n",
              "      <td>0.810161</td>\n",
              "      <td>-1.079457</td>\n",
              "      <td>0.858557</td>\n",
              "      <td>-0.595102</td>\n",
              "      <td>0.014861</td>\n",
              "      <td>0.111736</td>\n",
              "      <td>0.138865</td>\n",
              "      <td>0.188746</td>\n",
              "      <td>1.999879</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.068209</td>\n",
              "      <td>0.128646</td>\n",
              "      <td>0.168951</td>\n",
              "      <td>0.230319</td>\n",
              "      <td>-0.040064</td>\n",
              "      <td>0.177029</td>\n",
              "      <td>0.271165</td>\n",
              "      <td>-0.308063</td>\n",
              "      <td>-0.127856</td>\n",
              "      <td>-0.184478</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-0.674276</td>\n",
              "      <td>-1.234323</td>\n",
              "      <td>-1.079457</td>\n",
              "      <td>0.858557</td>\n",
              "      <td>-0.703588</td>\n",
              "      <td>0.014861</td>\n",
              "      <td>0.111736</td>\n",
              "      <td>0.138865</td>\n",
              "      <td>0.188746</td>\n",
              "      <td>0.234917</td>\n",
              "      <td>...</td>\n",
              "      <td>0.248944</td>\n",
              "      <td>0.034074</td>\n",
              "      <td>0.031574</td>\n",
              "      <td>0.066029</td>\n",
              "      <td>-0.142702</td>\n",
              "      <td>-0.148485</td>\n",
              "      <td>-0.208426</td>\n",
              "      <td>-0.205930</td>\n",
              "      <td>-0.209411</td>\n",
              "      <td>-0.203379</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-1.136720</td>\n",
              "      <td>0.810161</td>\n",
              "      <td>0.185828</td>\n",
              "      <td>-1.057295</td>\n",
              "      <td>-0.920561</td>\n",
              "      <td>0.014861</td>\n",
              "      <td>0.111736</td>\n",
              "      <td>-0.696663</td>\n",
              "      <td>-0.666599</td>\n",
              "      <td>-1.530046</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.666681</td>\n",
              "      <td>-0.672497</td>\n",
              "      <td>-0.663059</td>\n",
              "      <td>-0.652724</td>\n",
              "      <td>-0.281204</td>\n",
              "      <td>-0.223136</td>\n",
              "      <td>-0.296801</td>\n",
              "      <td>-0.308063</td>\n",
              "      <td>-0.314136</td>\n",
              "      <td>-0.293382</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-0.905498</td>\n",
              "      <td>0.810161</td>\n",
              "      <td>-1.079457</td>\n",
              "      <td>0.858557</td>\n",
              "      <td>-0.595102</td>\n",
              "      <td>-1.764843</td>\n",
              "      <td>-1.558876</td>\n",
              "      <td>-1.532192</td>\n",
              "      <td>-1.521944</td>\n",
              "      <td>-1.530046</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.677929</td>\n",
              "      <td>-0.672497</td>\n",
              "      <td>-0.663059</td>\n",
              "      <td>-0.652724</td>\n",
              "      <td>-0.216964</td>\n",
              "      <td>-0.256990</td>\n",
              "      <td>-0.296801</td>\n",
              "      <td>-0.308063</td>\n",
              "      <td>-0.314136</td>\n",
              "      <td>-0.293382</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 23 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e008f530-c8af-4baf-b071-ec5128f25533')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e008f530-c8af-4baf-b071-ec5128f25533 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e008f530-c8af-4baf-b071-ec5128f25533');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_train\n",
        "y_test"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uEdlVEUMhnhW",
        "outputId": "b6bd6725-10de-4d89-f0b8-f788add2b2be"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 1, 0, ..., 0, 0, 0], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Array contains non-numeric elements, which could be strings, Python objects, or mixed data types.\n",
        "# we fix it\n",
        "y_train = y_train.astype(int)\n",
        "y_test = y_test.astype(int)"
      ],
      "metadata": {
        "id": "MQN802w5j9N4"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "##**Covertype Data Set**"
      ],
      "metadata": {
        "id": "c8WzPXMSWz9f"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Data Set Information:\n",
        "\n",
        "Predicting forest cover type from cartographic variables only (no remotely sensed data). The actual forest cover type for a given observation (30 x 30 meter cell) was determined from US Forest Service (USFS) Region 2 Resource Information System (RIS) data. Independent variables were derived from data originally obtained from US Geological Survey (USGS) and USFS data. Data is in raw form (not scaled) and contains binary (0 or 1) columns of data for qualitative independent variables (wilderness areas and soil types).\n",
        "\n",
        "http://archive.ics.uci.edu/ml/datasets/covertype"
      ],
      "metadata": {
        "id": "E3KXB_nCXAxb"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Attribute Information:\n",
        "\n",
        "Given is the attribute name, attribute type, the measurement unit and a brief description. The forest cover type is the classification problem. The order of this listing corresponds to the order of numerals along the rows of the database.\n",
        "\n",
        "Name / Data Type / Measurement / Description\n",
        "\n",
        "Elevation / quantitative /meters / Elevation in meters\n",
        "Aspect / quantitative / azimuth / Aspect in degrees azimuth\n",
        "Slope / quantitative / degrees / Slope in degrees\n",
        "Horizontal_Distance_To_Hydrology / quantitative / meters / Horz Dist to nearest surface water features\n",
        "Vertical_Distance_To_Hydrology / quantitative / meters / Vert Dist to nearest surface water features\n",
        "Horizontal_Distance_To_Roadways / quantitative / meters / Horz Dist to nearest roadway\n",
        "Hillshade_9am / quantitative / 0 to 255 index / Hillshade index at 9am, summer solstice\n",
        "Hillshade_Noon / quantitative / 0 to 255 index / Hillshade index at noon, summer soltice\n",
        "Hillshade_3pm / quantitative / 0 to 255 index / Hillshade index at 3pm, summer solstice\n",
        "Horizontal_Distance_To_Fire_Points / quantitative / meters / Horz Dist to nearest wildfire ignition points\n",
        "Wilderness_Area (4 binary columns) / qualitative / 0 (absence) or 1 (presence) / Wilderness area designation\n",
        "Soil_Type (40 binary columns) / qualitative / 0 (absence) or 1 (presence) / Soil Type designation\n",
        "Cover_Type (7 types) / integer / 1 to 7 / Forest Cover Type designation"
      ],
      "metadata": {
        "id": "swbdzjx3XCQA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataset = datasets[7]\n",
        "sep_regex = '\\s{1,2}' # Because the data file has ' ' and '  ' between each column\n",
        "\n",
        "#atasetorig = 'vowel.tr-orig-order'\n",
        "#sep_regex = ','\n",
        "\n",
        "df = pd.read_csv(directory_path + dataset, sep=sep_regex, header=None)\n",
        "df\n",
        "\n"
      ],
      "metadata": {
        "id": "CB0FhxnrXPiM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Breast Cancer_sklearn**"
      ],
      "metadata": {
        "id": "gNVo5eIqn27Z"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataset = load_breast_cancer()\n",
        "dataset"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "u_gxwGm0n9Vh",
        "outputId": "73b8c84d-3204-479a-bfba-9ec708f2d231"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'data': array([[1.799e+01, 1.038e+01, 1.228e+02, ..., 2.654e-01, 4.601e-01,\n",
              "         1.189e-01],\n",
              "        [2.057e+01, 1.777e+01, 1.329e+02, ..., 1.860e-01, 2.750e-01,\n",
              "         8.902e-02],\n",
              "        [1.969e+01, 2.125e+01, 1.300e+02, ..., 2.430e-01, 3.613e-01,\n",
              "         8.758e-02],\n",
              "        ...,\n",
              "        [1.660e+01, 2.808e+01, 1.083e+02, ..., 1.418e-01, 2.218e-01,\n",
              "         7.820e-02],\n",
              "        [2.060e+01, 2.933e+01, 1.401e+02, ..., 2.650e-01, 4.087e-01,\n",
              "         1.240e-01],\n",
              "        [7.760e+00, 2.454e+01, 4.792e+01, ..., 0.000e+00, 2.871e-01,\n",
              "         7.039e-02]]),\n",
              " 'target': array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,\n",
              "        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,\n",
              "        0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0,\n",
              "        1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0,\n",
              "        1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n",
              "        1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n",
              "        0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
              "        1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1,\n",
              "        1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0,\n",
              "        0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0,\n",
              "        1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1,\n",
              "        1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
              "        0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1,\n",
              "        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n",
              "        1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0,\n",
              "        0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n",
              "        0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0,\n",
              "        1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1,\n",
              "        1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n",
              "        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n",
              "        1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\n",
              "        1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n",
              "        1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1,\n",
              "        1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n",
              "        1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1]),\n",
              " 'frame': None,\n",
              " 'target_names': array(['malignant', 'benign'], dtype='<U9'),\n",
              " 'DESCR': '.. _breast_cancer_dataset:\\n\\nBreast cancer wisconsin (diagnostic) dataset\\n--------------------------------------------\\n\\n**Data Set Characteristics:**\\n\\n    :Number of Instances: 569\\n\\n    :Number of Attributes: 30 numeric, predictive attributes and the class\\n\\n    :Attribute Information:\\n        - radius (mean of distances from center to points on the perimeter)\\n        - texture (standard deviation of gray-scale values)\\n        - perimeter\\n        - area\\n        - smoothness (local variation in radius lengths)\\n        - compactness (perimeter^2 / area - 1.0)\\n        - concavity (severity of concave portions of the contour)\\n        - concave points (number of concave portions of the contour)\\n        - symmetry\\n        - fractal dimension (\"coastline approximation\" - 1)\\n\\n        The mean, standard error, and \"worst\" or largest (mean of the three\\n        worst/largest values) of these features were computed for each image,\\n        resulting in 30 features.  For instance, field 0 is Mean Radius, field\\n        10 is Radius SE, field 20 is Worst Radius.\\n\\n        - class:\\n                - WDBC-Malignant\\n                - WDBC-Benign\\n\\n    :Summary Statistics:\\n\\n    ===================================== ====== ======\\n                                           Min    Max\\n    ===================================== ====== ======\\n    radius (mean):                        6.981  28.11\\n    texture (mean):                       9.71   39.28\\n    perimeter (mean):                     43.79  188.5\\n    area (mean):                          143.5  2501.0\\n    smoothness (mean):                    0.053  0.163\\n    compactness (mean):                   0.019  0.345\\n    concavity (mean):                     0.0    0.427\\n    concave points (mean):                0.0    0.201\\n    symmetry (mean):                      0.106  0.304\\n    fractal dimension (mean):             0.05   0.097\\n    radius (standard error):              0.112  2.873\\n    texture (standard error):             0.36   4.885\\n    perimeter (standard error):           0.757  21.98\\n    area (standard error):                6.802  542.2\\n    smoothness (standard error):          0.002  0.031\\n    compactness (standard error):         0.002  0.135\\n    concavity (standard error):           0.0    0.396\\n    concave points (standard error):      0.0    0.053\\n    symmetry (standard error):            0.008  0.079\\n    fractal dimension (standard error):   0.001  0.03\\n    radius (worst):                       7.93   36.04\\n    texture (worst):                      12.02  49.54\\n    perimeter (worst):                    50.41  251.2\\n    area (worst):                         185.2  4254.0\\n    smoothness (worst):                   0.071  0.223\\n    compactness (worst):                  0.027  1.058\\n    concavity (worst):                    0.0    1.252\\n    concave points (worst):               0.0    0.291\\n    symmetry (worst):                     0.156  0.664\\n    fractal dimension (worst):            0.055  0.208\\n    ===================================== ====== ======\\n\\n    :Missing Attribute Values: None\\n\\n    :Class Distribution: 212 - Malignant, 357 - Benign\\n\\n    :Creator:  Dr. William H. Wolberg, W. Nick Street, Olvi L. Mangasarian\\n\\n    :Donor: Nick Street\\n\\n    :Date: November, 1995\\n\\nThis is a copy of UCI ML Breast Cancer Wisconsin (Diagnostic) datasets.\\nhttps://goo.gl/U2Uwz2\\n\\nFeatures are computed from a digitized image of a fine needle\\naspirate (FNA) of a breast mass.  They describe\\ncharacteristics of the cell nuclei present in the image.\\n\\nSeparating plane described above was obtained using\\nMultisurface Method-Tree (MSM-T) [K. P. Bennett, \"Decision Tree\\nConstruction Via Linear Programming.\" Proceedings of the 4th\\nMidwest Artificial Intelligence and Cognitive Science Society,\\npp. 97-101, 1992], a classification method which uses linear\\nprogramming to construct a decision tree.  Relevant features\\nwere selected using an exhaustive search in the space of 1-4\\nfeatures and 1-3 separating planes.\\n\\nThe actual linear program used to obtain the separating plane\\nin the 3-dimensional space is that described in:\\n[K. P. Bennett and O. L. Mangasarian: \"Robust Linear\\nProgramming Discrimination of Two Linearly Inseparable Sets\",\\nOptimization Methods and Software 1, 1992, 23-34].\\n\\nThis database is also available through the UW CS ftp server:\\n\\nftp ftp.cs.wisc.edu\\ncd math-prog/cpo-dataset/machine-learn/WDBC/\\n\\n.. topic:: References\\n\\n   - W.N. Street, W.H. Wolberg and O.L. Mangasarian. Nuclear feature extraction \\n     for breast tumor diagnosis. IS&T/SPIE 1993 International Symposium on \\n     Electronic Imaging: Science and Technology, volume 1905, pages 861-870,\\n     San Jose, CA, 1993.\\n   - O.L. Mangasarian, W.N. Street and W.H. Wolberg. Breast cancer diagnosis and \\n     prognosis via linear programming. Operations Research, 43(4), pages 570-577, \\n     July-August 1995.\\n   - W.H. Wolberg, W.N. Street, and O.L. Mangasarian. Machine learning techniques\\n     to diagnose breast cancer from fine-needle aspirates. Cancer Letters 77 (1994) \\n     163-171.',\n",
              " 'feature_names': array(['mean radius', 'mean texture', 'mean perimeter', 'mean area',\n",
              "        'mean smoothness', 'mean compactness', 'mean concavity',\n",
              "        'mean concave points', 'mean symmetry', 'mean fractal dimension',\n",
              "        'radius error', 'texture error', 'perimeter error', 'area error',\n",
              "        'smoothness error', 'compactness error', 'concavity error',\n",
              "        'concave points error', 'symmetry error',\n",
              "        'fractal dimension error', 'worst radius', 'worst texture',\n",
              "        'worst perimeter', 'worst area', 'worst smoothness',\n",
              "        'worst compactness', 'worst concavity', 'worst concave points',\n",
              "        'worst symmetry', 'worst fractal dimension'], dtype='<U23'),\n",
              " 'filename': 'breast_cancer.csv',\n",
              " 'data_module': 'sklearn.datasets.data'}"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "target = dataset.target\n",
        "contamination = sum(target) / len(target)\n",
        "print(\"Contamination is:\", contamination)\n",
        "X_train, X_test, y_train, y_test = train_test_split(dataset.data, dataset.target, test_size=0.2, random_state=42)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "li5HNUWQpkin",
        "outputId": "a4c30bf3-1c33-4174-c206-80a8129f2d7c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Contamination is: 0.6274165202108963\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "target\n",
        "contamination=0.5"
      ],
      "metadata": {
        "id": "1gm-ugHZrFdf"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Badges_NotYet** "
      ],
      "metadata": {
        "id": "pml4ycrlqMBk"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://archive.ics.uci.edu/ml/machine-learning-databases/badges/badges.data"
      ],
      "metadata": {
        "id": "nIfslwEluRAs"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Perfume_NotYet**"
      ],
      "metadata": {
        "id": "C5Aac2ToqNc5"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://archive.ics.uci.edu/ml/machine-learning-databases/00303/perfume_data.xlsx"
      ],
      "metadata": {
        "id": "C_bbt1eouVdB"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **ExtremeWeather_NotYet**\n"
      ],
      "metadata": {
        "id": "iWX9taxvgenr"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        " https://paperswithcode.com/dataset/extremeweather\n"
      ],
      "metadata": {
        "id": "UsFhdT00gqCG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import h5py\n",
        "data_path = \"./climo_1979.h5\"\n",
        "h5f = h5py.File(data_path)\n",
        "images = h5f[\"images\"] # (1460,16,768,1152) numpy array\n",
        "boxes = h5f[\"boxes\"] # (1460,15,5) numpy array"
      ],
      "metadata": {
        "id": "Nbx6NhZXgskt"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Breast Cancer Wisconsin (Diagnostic) Data Set_ THE BEST AT THE MOMENT**"
      ],
      "metadata": {
        "id": "mxLPNdcrs3-4"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Breast Cancer Wisconsin (Diagnostic) Data Set\n",
        "Attribute Information:\n",
        "\n",
        "1) ID number\n",
        "2) Diagnosis (M = malignant, B = benign)\n",
        "3-32)\n",
        "\n",
        "Ten real-valued features are computed for each cell nucleus:\n",
        "\n",
        "a) radius (mean of distances from center to points on the perimeter)\n",
        "b) texture (standard deviation of gray-scale values)\n",
        "c) perimeter\n",
        "d) area\n",
        "e) smoothness (local variation in radius lengths)\n",
        "f) compactness (perimeter^2 / area - 1.0)\n",
        "g) concavity (severity of concave portions of the contour)\n",
        "h) concave points (number of concave portions of the contour)\n",
        "i) symmetry\n",
        "j) fractal dimension (\"coastline approximation\" - 1)\n",
        "\n"
      ],
      "metadata": {
        "id": "DCj_H0Pct727"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataset = datasets[10]\n",
        "print(dataset)\n",
        "df = pd.read_csv(directory_path + dataset, header=None) \n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 441
        },
        "id": "eN0Ie3Ohs68Z",
        "outputId": "f269fe5c-0d11-4746-bd78-f7bcfc206e13"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "cancer.csv\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     0   1   2  3  4   5   6   7  8  9\n",
              "0    5   1   1  1  2   1   3   1  1  0\n",
              "1    5   4   4  5  7  10   3   2  1  0\n",
              "2    3   1   1  1  2   2   3   1  1  0\n",
              "3    6   8   8  1  3   4   3   7  1  0\n",
              "4    4   1   1  3  2   1   3   1  1  0\n",
              "..  ..  ..  .. .. ..  ..  ..  .. .. ..\n",
              "678  3   1   1  1  3   2   1   1  1  0\n",
              "679  2   1   1  1  2   1   1   1  1  0\n",
              "680  5  10  10  3  7   3   8  10  2  1\n",
              "681  4   8   6  4  3   4  10   6  1  1\n",
              "682  4   8   8  5  4   5  10   4  1  1\n",
              "\n",
              "[683 rows x 10 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8d528cd4-4656-4653-92ad-6441d4b490eb\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>7</td>\n",
              "      <td>10</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>6</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>678</th>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>679</th>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>680</th>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>3</td>\n",
              "      <td>7</td>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>10</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>681</th>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>10</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>682</th>\n",
              "      <td>4</td>\n",
              "      <td>8</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>683 rows × 10 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8d528cd4-4656-4653-92ad-6441d4b490eb')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8d528cd4-4656-4653-92ad-6441d4b490eb button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8d528cd4-4656-4653-92ad-6441d4b490eb');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X = df.iloc[:, :-1].values\n",
        "X = scaler.fit_transform(X)\n",
        "y = df.iloc[:, -1].values\n",
        "print(X)\n",
        "print(y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zUjeGYivtG2U",
        "outputId": "132e4d57-e7fa-4cf3-856d-cbdf0bb52b72"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[ 0.19790469 -0.70221201 -0.74177362 ... -0.18182716 -0.61292736\n",
            "  -0.34839971]\n",
            " [ 0.19790469  0.27725185  0.26278299 ... -0.18182716 -0.28510482\n",
            "  -0.34839971]\n",
            " [-0.51164337 -0.70221201 -0.74177362 ... -0.18182716 -0.61292736\n",
            "  -0.34839971]\n",
            " ...\n",
            " [ 0.19790469  2.23617957  2.2718962  ...  1.86073779  2.33747554\n",
            "   0.22916583]\n",
            " [-0.15686934  1.58320366  0.93248739 ...  2.67776377  1.02618536\n",
            "  -0.34839971]\n",
            " [-0.15686934  1.58320366  1.6021918  ...  2.67776377  0.37054027\n",
            "  -0.34839971]]\n",
            "[0 0 0 0 0 1 0 0 0 0 0 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0\n",
            " 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 0 1 1 0 0 1 0 1 1 0\n",
            " 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1\n",
            " 1 0 0 0 1 0 0 0 0 1 1 1 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 1 0 1\n",
            " 1 0 0 1 0 0 1 1 0 0 0 0 1 1 0 0 0 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 1 1 1 0 1\n",
            " 1 0 0 0 0 0 0 0 0 1 1 0 0 0 1 1 0 0 0 1 1 0 1 1 1 0 0 1 0 0 1 1 1 1 0 1 1\n",
            " 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 0 1 1 0 0 1 0 1 1 1 0 0 0 0 1 1 1 1 1 0 1\n",
            " 1 1 0 1 0 1 1 0 0 0 0 1 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 0 1 0 1 1 0 0\n",
            " 1 0 0 0 1 0 0 1 1 0 0 1 0 1 0 0 1 0 1 1 1 0 0 1 1 0 1 0 0 1 1 0 0 0 1 0 0\n",
            " 0 1 1 0 0 0 1 0 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0\n",
            " 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 1\n",
            " 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 1 1 0\n",
            " 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0\n",
            " 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0\n",
            " 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1\n",
            " 1 1 0 0 1 0 0 0 0 0 0 1 1 0 0 0 1 0 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 1 1 1 0\n",
            " 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0\n",
            " 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 1 1\n",
            " 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "counts = df[9].value_counts()\n",
        "contamination = counts[1]/(counts[0] +counts[1])\n",
        "contamination # percentage of outliers"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KO7rMvmVtVvS",
        "outputId": "c56d4e64-8d9e-432c-a6c9-94a772596305"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.34992679355783307"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, test_size=0.3, random_state=42)\n",
        "X_train_pd = pd.DataFrame(X_train)\n",
        "X_train_pd.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "_UNSoe1Ytbrk",
        "outputId": "210efa19-f8cb-4a39-887c-28687d31b5a0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          0         1         2         3         4         5         6  \\\n",
              "0 -1.221191 -0.702212 -0.741774 -0.639366 -0.555608 -0.698853 -0.181827   \n",
              "1 -1.221191 -0.702212 -0.406921 -0.639366 -0.555608 -0.698853 -0.590340   \n",
              "2 -1.221191 -0.702212 -0.741774 -0.639366 -0.555608 -0.698853 -0.181827   \n",
              "3  0.197905 -0.702212 -0.741774 -0.639366 -0.555608 -0.698853 -0.590340   \n",
              "4  0.552679 -0.049236 -0.406921 -0.639366 -0.105454  0.125054  0.226686   \n",
              "\n",
              "          7       8  \n",
              "0 -0.612927 -0.3484  \n",
              "1 -0.612927 -0.3484  \n",
              "2 -0.612927 -0.3484  \n",
              "3 -0.612927 -0.3484  \n",
              "4 -0.612927 -0.3484  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4110e4d8-9640-411e-8fb8-6cd7896417e0\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-1.221191</td>\n",
              "      <td>-0.702212</td>\n",
              "      <td>-0.741774</td>\n",
              "      <td>-0.639366</td>\n",
              "      <td>-0.555608</td>\n",
              "      <td>-0.698853</td>\n",
              "      <td>-0.181827</td>\n",
              "      <td>-0.612927</td>\n",
              "      <td>-0.3484</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-1.221191</td>\n",
              "      <td>-0.702212</td>\n",
              "      <td>-0.406921</td>\n",
              "      <td>-0.639366</td>\n",
              "      <td>-0.555608</td>\n",
              "      <td>-0.698853</td>\n",
              "      <td>-0.590340</td>\n",
              "      <td>-0.612927</td>\n",
              "      <td>-0.3484</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-1.221191</td>\n",
              "      <td>-0.702212</td>\n",
              "      <td>-0.741774</td>\n",
              "      <td>-0.639366</td>\n",
              "      <td>-0.555608</td>\n",
              "      <td>-0.698853</td>\n",
              "      <td>-0.181827</td>\n",
              "      <td>-0.612927</td>\n",
              "      <td>-0.3484</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.197905</td>\n",
              "      <td>-0.702212</td>\n",
              "      <td>-0.741774</td>\n",
              "      <td>-0.639366</td>\n",
              "      <td>-0.555608</td>\n",
              "      <td>-0.698853</td>\n",
              "      <td>-0.590340</td>\n",
              "      <td>-0.612927</td>\n",
              "      <td>-0.3484</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.552679</td>\n",
              "      <td>-0.049236</td>\n",
              "      <td>-0.406921</td>\n",
              "      <td>-0.639366</td>\n",
              "      <td>-0.105454</td>\n",
              "      <td>0.125054</td>\n",
              "      <td>0.226686</td>\n",
              "      <td>-0.612927</td>\n",
              "      <td>-0.3484</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4110e4d8-9640-411e-8fb8-6cd7896417e0')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4110e4d8-9640-411e-8fb8-6cd7896417e0 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4110e4d8-9640-411e-8fb8-6cd7896417e0');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 05 **PCA and KernelPCA for Anomaly Detection with PyOD**"
      ],
      "metadata": {
        "id": "olFfy9jqsWDt"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## PCA"
      ],
      "metadata": {
        "id": "UpnkgtCf0BjK"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Anomaly Detection using the library PyOD"
      ],
      "metadata": {
        "id": "GhL_Us2M0NDS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "pca = PCA_PYOD(n_components=2, contamination=contamination) \n",
        "pca.fit(X_train,y=None)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DalgiCdS0qAz",
        "outputId": "d3d4025b-6cd6-4549-c994-788ed75d2c2b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "PCA(contamination=0.34992679355783307, copy=True, iterated_power='auto',\n",
              "  n_components=2, n_selected_components=None, random_state=None,\n",
              "  standardization=True, svd_solver='auto', tol=0.0, weighted=True,\n",
              "  whiten=False)"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#pca.get_params()\n",
        "#pca.components_\n",
        "#pca.n_components_"
      ],
      "metadata": {
        "id": "JO46ySKpzxh1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#pca.singular_values_\n",
        "#pca.mean_\n",
        "#pca.noise_variance_\n",
        "#pca.decision_scores_\n",
        "#pca.labels_\n",
        "#pca.decision_function(X_train)\n",
        "#pca.fit_predict(X_train, y=None)                     #DEPRECATED\n",
        "#pca.fit_predict_score(X, y, scoring='roc_auc_score') #DEPRECATED\n",
        "#pca.predict(X_train, return_confidence=False)\n",
        "#pca.predict_confidence(X_train)\n",
        "#pca.predict_proba(X_test, method='linear', return_confidence=False)"
      ],
      "metadata": {
        "id": "19W3O3po11wQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "[pca.explained_variance_,\n",
        "pca.explained_variance_ratio_]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fgsSm5NO6PiM",
        "outputId": "60a1504f-891b-4156-ebab-44e623d45d05"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[array([5.86403853, 0.78995228]), array([0.65019674, 0.08758885])]"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "threshold_pca = pca.threshold_\n",
        "print(\"The threshold of the PCA method for the defined comtanimation rate:\" , threshold_pca)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AnSOebxd2FUu",
        "outputId": "c19683fe-02d7-496c-c9d5-5d42bfb3e9b3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The threshold of the PCA method for the defined comtanimation rate: 34.117680036219\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# PCA\n",
        "# get the prediction labels and outlier scores of the training data\n",
        "y_train_pred_pca = pca.predict(X_train)\n",
        "y_train_scores_pca = pca.decision_function(X_train)\n",
        "\n",
        "# get the prediction on the test data\n",
        "y_test_pred_pca = pca.predict(X_test) # outlier labels (0 or 1)\n",
        "y_test_scores_pca = pca.decision_function(X_test) #outlier scores\n",
        "\n",
        "#y_test_scores_pca"
      ],
      "metadata": {
        "id": "NNHmmbwD3M_H"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#pca.predict_proba(X_test, method='linear', return_confidence=False)[:, 1]"
      ],
      "metadata": {
        "id": "AodTtcD6DMLg"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "plt.hist(y_train_scores_pca, bins=50)  # arguments are passed to np.histogram\n",
        "plt.title(\"Histogram with 'auto' bins\")\n",
        "plt.xlabel('PCA outlier score')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "yLs4D4LQ4CyD",
        "outputId": "7e1ab065-9507-47f7-c4cf-caa60e44666d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The bellow table presents the characteristics of the normal and abnormal groups. It shows the count and count percentage of the normal and outlier groups.  The table tells us several important results:"
      ],
      "metadata": {
        "id": "vZ_3nYap8fqU"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def descriptive_stat_threshold(df,pred_score, threshold):\n",
        "    # Let's see how many '0's and '1's.\n",
        "    df = pd.DataFrame(df)\n",
        "    df['Anomaly_Score'] = pred_score\n",
        "    df['Group'] = np.where(df['Anomaly_Score']< threshold, 'Normal', 'Outlier')\n",
        "\n",
        "    # Now let's show the summary statistics:\n",
        "    cnt = df.groupby('Group')['Anomaly_Score'].count().reset_index().rename(columns={'Anomaly_Score':'Count'})\n",
        "    cnt['Count %'] = (cnt['Count'] / cnt['Count'].sum()) * 100 # The count and count %\n",
        "    stat = df.groupby('Group').mean().round(2).reset_index() # The avg.\n",
        "    stat = cnt.merge(stat, left_on='Group',right_on='Group') # Put the count and the avg. together\n",
        "    return (stat)\n",
        "    \n",
        "descriptive_stat_threshold(X_train,y_train_scores_pca, threshold_pca)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "HFUGj3OC8e4I",
        "outputId": "a14e82d0-dd1f-431a-93c4-46d7e9c134c7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Group  Count    Count %     0     1     2     3     4     5     6     7  \\\n",
              "0   Normal    311  65.062762 -0.48 -0.58 -0.58 -0.50 -0.51 -0.58 -0.53 -0.51   \n",
              "1  Outlier    167  34.937238  0.84  1.07  1.09  0.96  0.84  1.11  0.96  0.89   \n",
              "\n",
              "      8  Anomaly_Score  \n",
              "0 -0.29          28.41  \n",
              "1  0.59          55.16  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a08c6b05-1a0b-43f1-9d9d-03b9ab18e679\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Group</th>\n",
              "      <th>Count</th>\n",
              "      <th>Count %</th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>Anomaly_Score</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Normal</td>\n",
              "      <td>311</td>\n",
              "      <td>65.062762</td>\n",
              "      <td>-0.48</td>\n",
              "      <td>-0.58</td>\n",
              "      <td>-0.58</td>\n",
              "      <td>-0.50</td>\n",
              "      <td>-0.51</td>\n",
              "      <td>-0.58</td>\n",
              "      <td>-0.53</td>\n",
              "      <td>-0.51</td>\n",
              "      <td>-0.29</td>\n",
              "      <td>28.41</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Outlier</td>\n",
              "      <td>167</td>\n",
              "      <td>34.937238</td>\n",
              "      <td>0.84</td>\n",
              "      <td>1.07</td>\n",
              "      <td>1.09</td>\n",
              "      <td>0.96</td>\n",
              "      <td>0.84</td>\n",
              "      <td>1.11</td>\n",
              "      <td>0.96</td>\n",
              "      <td>0.89</td>\n",
              "      <td>0.59</td>\n",
              "      <td>55.16</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a08c6b05-1a0b-43f1-9d9d-03b9ab18e679')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a08c6b05-1a0b-43f1-9d9d-03b9ab18e679 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a08c6b05-1a0b-43f1-9d9d-03b9ab18e679');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(y_test_pred_pca.shape)\n",
        "print(y_test.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xWdEq3JAiBuK",
        "outputId": "52a60ab0-f3e2-4a70-cf20-d4f66bcf309d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(205,)\n",
            "(205,)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cm = confusion_matrix(y_test, y_test_pred_pca)\n",
        "cm_display = ConfusionMatrixDisplay(cm).plot()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "KTdLta3w9LK1",
        "outputId": "a8884cbe-dabe-4025-bd3b-8b363e8a4732"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"\\nOn Training Data:\")\n",
        "evaluate_print('PCA', y_train, y_train_scores_pca)\n",
        "print(\"\\nOn Test Data:\")\n",
        "evaluate_print('PCA', y_test, y_test_scores_pca)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jMtldogd-yTS",
        "outputId": "51ff205f-c68a-451a-b086-7815b410ecb0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "On Training Data:\n",
            "PCA ROC:0.9536, precision @ rank n:0.9042\n",
            "\n",
            "On Test Data:\n",
            "PCA ROC:0.9606, precision @ rank n:0.9444\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### PCA plot using the library sklearn"
      ],
      "metadata": {
        "id": "8SDIYIAiOnKf"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# fit PCA on training data\n",
        "pca = PCA(n_components=2, random_state=42)\n",
        "X_train_pca = pca.fit_transform(X_train)\n",
        "X_test_pca = pca.transform(X_test)\n",
        "\n",
        "# create a scatter plot of the projected data\n",
        "plt.scatter(X_train_pca[:, 0], X_train_pca[:, 1], c=y_train, cmap='viridis')\n",
        "plt.xlabel('PC 1')\n",
        "plt.ylabel('PC 2')\n",
        "plt.show()\n",
        "\n",
        "# create a scatter plot of the projected data\n",
        "plt.scatter(X_test_pca[:, 0], X_test_pca[:, 1], c=y_test, cmap='viridis')\n",
        "plt.xlabel('PC 1')\n",
        "plt.ylabel('PC 2')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 881
        },
        "id": "qmmJM3HfOsJK",
        "outputId": "2af064df-dec7-49ab-8137-c7d5b089747c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Visualize the training set and the outliers\n",
        "visualize('PCA', X_train_pca, y_train, X_test_pca, y_test, y_train_pred_pca, y_test_pred_pca, show_figure=True, save_figure=False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 907
        },
        "id": "sA9z5q5KaZeM",
        "outputId": "0213c844-c1a7-4a3e-e013-94807c57875f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x1000 with 4 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## KPCA"
      ],
      "metadata": {
        "id": "vAxA5NrQ0S1r"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Anomaly Detection"
      ],
      "metadata": {
        "id": "iVSuIElD0XEC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# KPCA\n",
        "kpca = KPCA_PYOD(n_components=2, kernel='rbf', gamma=0.015, contamination=contamination)\n",
        "kpca.fit(X_train, y=None)"
      ],
      "metadata": {
        "id": "9vIZ1lLxzv6A",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b72e6a84-563d-4af8-b7ad-fc3bb90eb9da"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "KPCA(alpha=None, coef0=None, contamination=0.34992679355783307, copy_X=None,\n",
              "   degree=None, eigen_solver=None, gamma=None, kernel=None,\n",
              "   kernel_params=None, max_iter=None, n_components=2, n_jobs=None,\n",
              "   n_selected_components=None,\n",
              "   random_state=RandomState(MT19937) at 0x7F56C049F840,\n",
              "   remove_zero_eig=None, sampling=False, subset_size=20, tol=None)"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#kpca.get_params()\n",
        "#kpca.decision_scores_\n",
        "#kpca.labels_\n",
        "#kpca.decision_function(X_train)\n",
        "#kpca.fit_predict(X_train, y=None)\n",
        "#kpca.fit_predict_score(X_train, y_train, scoring='roc_auc_score')\n",
        "#kpca.predict(X_train, return_confidence=False)\n",
        "#kpca.predict_confidence(X_train)\n",
        "#kpca.predict_proba(X_train, method='linear', return_confidence=False)"
      ],
      "metadata": {
        "id": "7Tt3FRzkStvM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "threshold_kpca = kpca.threshold_\n",
        "print(\"The threshold of the KPCA method for the defined comtanimation rate:\" , threshold_kpca)"
      ],
      "metadata": {
        "id": "rT_nvPOWzJsA",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8e769e88-0fbf-49c7-9bb1-954ff0303d75"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The threshold of the KPCA method for the defined comtanimation rate: 0.07920677614378768\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# KPCA\n",
        "# get the prediction labels and outlier scores of the training data\n",
        "y_train_pred_kpca = kpca.labels_\n",
        "y_train_scores_kpca = kpca.decision_scores_\n",
        "\n",
        "# get the prediction labels and outlier scores of the test data\n",
        "y_test_scores_kpca = kpca.decision_function(X_test)\n",
        "y_test_pred_kpca = kpca.predict(X_test)"
      ],
      "metadata": {
        "id": "UckzStRZCDj8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "plt.hist(y_train_scores_kpca, bins=50)  # arguments are passed to np.histogram\n",
        "plt.title(\"Histogram\")\n",
        "plt.xlabel('KPCA outlier score')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "-4KpUpEuqQpR",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "outputId": "9d8b31d4-004d-48a5-c07d-a75da7c409bf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAigAAAHHCAYAAACV96NPAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAsRklEQVR4nO3deXRUVb728aeSkEEgFQZJCAaCMosMgoSIExoMykVAroAMl9AIdjeDCA5wZVTaAI2SC43QDAJ2A0FtpgaJcNOISw0zUS4gIAaMQkIjkjBICMl+//CluotEIFBJ7STfz1pnSe2zz65f1VbqcZ9zqhzGGCMAAACL+Hi7AAAAgKsRUAAAgHUIKAAAwDoEFAAAYB0CCgAAsA4BBQAAWIeAAgAArENAAQAA1iGgAAAA6xBQAFxTZGSk4uLivF0GgHKGgAKUM4sXL5bD4dDOnTsL3f/II4+oadOmt/QcH330kSZOnHhLYwAo3wgoAK7p4MGDmj9/fpGO+eijjzRp0qRiqghAeUBAAXBNAQEBqlChgrfLKJLz5897uwQAt4iAAuCarr4GJTc3V5MmTVL9+vUVGBioatWq6YEHHtCmTZskSXFxcZo9e7YkyeFwuLYrzp8/r1GjRikiIkIBAQFq2LChpk+frqt/WP3nn3/W8OHDVb16dVWuXFlPPfWUfvjhBzkcDrfTRxMnTpTD4dD+/fvVu3dvValSRQ888IAk6auvvlJcXJzuvPNOBQYGKiwsTL/5zW/0448/uj3XlTEOHTqkvn37yul06vbbb9e4ceNkjFF6erq6dOmi4OBghYWF6a233vLkWwygEH7eLgCAd2RlZenUqVMF2nNzc6953MSJExUfH6/nnntObdq0UXZ2tnbu3Kndu3erQ4cOev7553X8+HFt2rRJf/nLX9yONcboqaee0ubNmzVw4EC1aNFCH3/8sV5++WX98MMPmjFjhqtvXFyc3n//ffXr109t27bVli1b1KlTp1+t65lnnlH9+vX15ptvusLOpk2b9O2332rAgAEKCwvTvn37NG/ePO3bt09bt251C06S1LNnTzVu3FhTpkzR+vXrNXnyZFWtWlV//vOf9eijj2rq1KlaunSpXnrpJd1333166KGHrvs+A7hJBkC5smjRIiPpmtvdd9/t6l+nTh3Tv39/1+PmzZubTp06XfM5hgwZYgr762X16tVGkpk8ebJb+3/+538ah8NhvvnmG2OMMbt27TKSzIgRI9z6xcXFGUlmwoQJrrYJEyYYSebZZ58t8HwXLlwo0LZ8+XIjyXz66acFxhg8eLCr7fLly+aOO+4wDofDTJkyxdX+008/maCgILf3BIDncYoHKKdmz56tTZs2FdiaNWt2zeNCQkK0b98+HT58uMjP+dFHH8nX11fDhw93ax81apSMMdqwYYMkKSkpSZL0+9//3q3fsGHDfnXs3/72twXagoKCXH++ePGiTp06pbZt20qSdu/eXaD/c8895/qzr6+vWrduLWOMBg4c6GoPCQlRw4YN9e233/5qLQBuHad4gHKqTZs2at26dYH2KlWqFHrq54rXX39dXbp0UYMGDdS0aVN17NhR/fr1u26wkaRjx44pPDxclStXdmtv3Lixa/+Vf/r4+Khu3bpu/erVq/erY1/dV5JOnz6tSZMmKTExUSdPnnTbl5WVVaB/7dq13R47nU4FBgaqevXqBdqvvo4FgGexggKgSB566CEdOXJE7777rpo2baoFCxbo3nvv1YIFC7xa17+vllzRo0cPzZ8/X7/97W+1cuVKbdy40bU6k5+fX6C/r6/vDbVJKnBRLwDPIqAAKLKqVatqwIABWr58udLT09WsWTO3O2uuvvj0ijp16uj48eM6e/asW/vXX3/t2n/ln/n5+UpLS3Pr980339xwjT/99JOSk5M1evRoTZo0Sd26dVOHDh1055133vAYALyHgAKgSK4+tVGpUiXVq1dPOTk5rraKFStKks6cOePW98knn1ReXp7+9Kc/ubXPmDFDDodDTzzxhCQpNjZWkvTOO++49Zs1a9YN13ll5ePqlY6EhIQbHgOA93ANCoAiadKkiR555BG1atVKVatW1c6dO/Xhhx9q6NChrj6tWrWSJA0fPlyxsbHy9fVVr1691LlzZ7Vv316vvfaajh49qubNm2vjxo1as2aNRowYobvuust1fPfu3ZWQkKAff/zRdZvxoUOHJP36Cs2/Cw4O1kMPPaRp06YpNzdXtWrV0saNGwusygCwEwEFQJEMHz5ca9eu1caNG5WTk6M6depo8uTJevnll119nn76aQ0bNkyJiYn661//KmOMevXqJR8fH61du1bjx4/XihUrtGjRIkVGRuqPf/yjRo0a5fY87733nsLCwrR8+XKtWrVKMTExWrFihRo2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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "descriptive_stat_threshold(X_train,y_train_scores_kpca, threshold_kpca)"
      ],
      "metadata": {
        "id": "REfthP9t-33T",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "outputId": "0cecea73-da0d-42bf-8ed2-5c3c50cab290"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Group  Count    Count %     0     1     2     3     4     5     6     7  \\\n",
              "0   Normal    311  65.062762 -0.48 -0.53 -0.54 -0.45 -0.50 -0.50 -0.48 -0.47   \n",
              "1  Outlier    167  34.937238  0.83  0.97  1.00  0.87  0.83  0.98  0.86  0.81   \n",
              "\n",
              "      8  Anomaly_Score  \n",
              "0 -0.31           0.02  \n",
              "1  0.63           0.17  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9e24a108-340e-413e-a284-b13ca6b56557\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Group</th>\n",
              "      <th>Count</th>\n",
              "      <th>Count %</th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>Anomaly_Score</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Normal</td>\n",
              "      <td>311</td>\n",
              "      <td>65.062762</td>\n",
              "      <td>-0.48</td>\n",
              "      <td>-0.53</td>\n",
              "      <td>-0.54</td>\n",
              "      <td>-0.45</td>\n",
              "      <td>-0.50</td>\n",
              "      <td>-0.50</td>\n",
              "      <td>-0.48</td>\n",
              "      <td>-0.47</td>\n",
              "      <td>-0.31</td>\n",
              "      <td>0.02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Outlier</td>\n",
              "      <td>167</td>\n",
              "      <td>34.937238</td>\n",
              "      <td>0.83</td>\n",
              "      <td>0.97</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.87</td>\n",
              "      <td>0.83</td>\n",
              "      <td>0.98</td>\n",
              "      <td>0.86</td>\n",
              "      <td>0.81</td>\n",
              "      <td>0.63</td>\n",
              "      <td>0.17</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9e24a108-340e-413e-a284-b13ca6b56557')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9e24a108-340e-413e-a284-b13ca6b56557 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9e24a108-340e-413e-a284-b13ca6b56557');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cm = confusion_matrix(y_test, y_test_pred_kpca)\n",
        "cm_display = ConfusionMatrixDisplay(cm).plot()"
      ],
      "metadata": {
        "id": "UkMWC8Os_Hti",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "outputId": "b74781f8-56e5-4634-9c41-2c2bbb069977"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"\\nOn Training Data:\")\n",
        "evaluate_print('KPCA', y_train, y_train_scores_kpca)\n",
        "print(\"\\nOn Test Data:\")\n",
        "evaluate_print('KPCA', y_test, y_test_scores_kpca)"
      ],
      "metadata": {
        "id": "Y4ax7KVeTpcc",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8979478d-37da-4ae9-ac55-53f629a47563"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "On Training Data:\n",
            "KPCA ROC:0.9645, precision @ rank n:0.8743\n",
            "\n",
            "On Test Data:\n",
            "KPCA ROC:0.9842, precision @ rank n:0.9028\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#kpca.fit_predict_score(X_train, y_train, scoring='roc_auc_score')"
      ],
      "metadata": {
        "id": "OxCzQWH3Txez"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#kpca.fit_predict_score(X_train, y_train, scoring='prc_n_score')"
      ],
      "metadata": {
        "id": "h4_hy-2wT2PK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### KPCA using the library:sklearn"
      ],
      "metadata": {
        "id": "3OTiOU1-SWFN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# fit KernelPCA on training data\n",
        "kpca = KernelPCA(n_components=2, kernel='rbf', gamma=0.01)\n",
        "X_train_kpca = kpca.fit_transform(X_train)\n",
        "X_test_kpca = kpca.transform(X_test)\n",
        "\n",
        "# create a scatter plot of the projected data\n",
        "plt.scatter(X_train_kpca[:, 0], X_train_kpca[:, 1], c=y_train, cmap='viridis')\n",
        "plt.xlabel('PC1')\n",
        "plt.ylabel('PC2')\n",
        "plt.title('KernelPCA: 2PC for train')\n",
        "plt.show()\n",
        "\n",
        "# create a scatter plot of the projected data\n",
        "plt.scatter(X_test_kpca[:, 0], X_test_kpca[:, 1], c=y_test, cmap='viridis')\n",
        "plt.xlabel('PC1')\n",
        "plt.ylabel('PC2')\n",
        "plt.title('KernelPCA: 2PC for test')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 927
        },
        "id": "L5c_6nJl2YQr",
        "outputId": "35f91ea7-ee80-492f-ad60-4badef1e4f77"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Visualize the training set and the outliers\n",
        "visualize('KPCA', X_train_pca, y_train, X_test_kpca, y_test, y_train_pred_kpca, y_test_pred_kpca, show_figure=True, save_figure=False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 907
        },
        "id": "OCOJyLD6cD4d",
        "outputId": "15ca1d37-b396-44f9-9090-41a73c1ee198"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x1000 with 4 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Define a list of kernel functions and parameters to try\n",
        "kernels = ['linear', 'poly', 'rbf', 'sigmoid']\n",
        "gammas = [0.001, 0.01, 0.1, 1, 10, 100, 1000]"
      ],
      "metadata": {
        "id": "gLra-Uaq0QRX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Perform kernelPCA\n",
        "# Initialize a subplot grid to plot the results\n",
        "fig, axs = plt.subplots(len(kernels), len(gammas), figsize=(15, 15), constrained_layout=True)\n",
        "\n",
        "# Loop over the kernels and gammas and perform KPCA\n",
        "for i, kernel in enumerate(kernels):\n",
        "    for j, gamma in enumerate(gammas):\n",
        "        # Initialize the KPCA transformer and fit the data\n",
        "        kpca = KernelPCA(n_components=2, kernel=kernel, gamma=gamma)\n",
        "        X_kpca = kpca.fit_transform(X_train)\n",
        "\n",
        "        # Plot the results\n",
        "        axs[i, j].scatter(X_kpca[:, 0], X_kpca[:, 1], c=y_train, cmap='viridis', alpha=0.8)\n",
        "        axs[i, j].set_title(f'{kernel} kernel, gamma={gamma}')\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "1Tidoiz7zYws",
        "outputId": "0f9119ea-9242-4b49-da39-5d94e2c8fb98"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x1500 with 28 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 06 **PCA and kernelPCA with Logistic regression**"
      ],
      "metadata": {
        "id": "MTR_c9UkNnEK"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **PCA_101 + Logistic Regression**"
      ],
      "metadata": {
        "id": "ZWMjzGqyN6-2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "pca = PCA(n_components=2)# we make an instance of PCA and decide how many components we want to have\n",
        "X_train = pca.fit_transform(X_train)\n",
        "X_test = pca.transform(X_test)"
      ],
      "metadata": {
        "id": "fGk2LZXBN2k-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(X_train.shape) # As we can see, we have reduced feature into 2 main features\n",
        "print(X_test.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DQlH_aVPN33J",
        "outputId": "e94123b4-9059-4a1d-d20a-dd9128c04ec8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(546, 2)\n",
            "(137, 2)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pca.components_"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "z5SCv93rOBHZ",
        "outputId": "b9d18b61-fedb-464a-e2a5-02145ce17618"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1., 0.],\n",
              "       [0., 1.]])"
            ]
          },
          "metadata": {},
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_comp=pd.DataFrame(pca.components_)\n",
        "df_comp"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "id": "o7nChijwODaT",
        "outputId": "165bb321-6837-43f3-f596-078387f6af21"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     0    1\n",
              "0  1.0  0.0\n",
              "1  0.0  1.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-59d7b914-194b-464e-aec8-7d9bac686579\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-59d7b914-194b-464e-aec8-7d9bac686579')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-59d7b914-194b-464e-aec8-7d9bac686579 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-59d7b914-194b-464e-aec8-7d9bac686579');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(15,10))\n",
        "sns.heatmap(df_comp,cmap=\"magma\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 853
        },
        "id": "MOX14zAPOEl4",
        "outputId": "5ee7cd29-9143-4269-a844-b48ba73738e6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 58
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x1000 with 2 Axes>"
            ],
            "image/png": "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xsbGZq81m80YGxuLwcHBeb8zODg45/6IiKNHj6b3Z2ycAAAAAB1veHg4tm3bFhs2bIhrr7029u7dG1NTU7F9+/aIiNi6dWusWrUqRkdHIyLi1ltvjfe+971x7733xgc+8IF45JFH4oknnogvfelLLT1XcAKcV19fX+zZs8dL7QCgRf4dCnBxbdmyJZ5//vnYvXt3TExMxLp16+LIkSOzL4A9ffp09PT8olhz3XXXxcMPPxy33357fPrTn47f+I3fiEcffTSuuuqqlp7bqKqquqh/EwAAAIBCeMcJAAAAQEJwAgAAAJAQnAAAAAAkBCcAAAAACcEJcF779++PNWvWxLJly2JgYCCOHz/e7pEAoKN95zvfiU2bNsUVV1wRjUYjHn300XaPBEANghMgdejQoRgeHo49e/bEyZMnY+3atbFx48Z47rnn2j0aAHSsqampWLt2bezfv7/dowBwETiOGEgNDAzENddcE/v27YuIiGazGatXr44dO3bErl272jwdAHS+RqMRX//612Pz5s3tHgWAC2TjBJjXuXPn4sSJEzE0NDR7raenJ4aGhmJ8fLyNkwEAACwewQkwrzNnzsTMzEz09/fPud7f3x8TExNtmgoAAGBxCU4AAAAAEoITYF4rVqyI3t7emJycnHN9cnIyVq5c2aapAAAAFpfgBJjX0qVLY/369TE2NjZ7rdlsxtjYWAwODrZxMgAAgMVzSbsHADrX8PBwbNu2LTZs2BDXXntt7N27N6ampmL79u3tHg0AOtZPfvKTePrpp2f//w9/+MM4depUvPGNb4xf/dVfbeNkAFwIxxED57Vv3774/Oc/HxMTE7Fu3bq4//77Y2BgoN1jAUDHOnbsWNx4440vu75t27Z46KGHFn8gAGoRnAAAAAAkvOMEAAAAICE4AQAAAEgITgAAAAASghMAAACAhOAEAAAAICE4AQAAAEgITgAAAAASghMAAACAhOAEAAAAICE4AQAAAEgITgAAAAASghMAAACAxP8DATJKsX4uII8AAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model = LogisticRegression()\n",
        "model.fit(X_train,y_train)\n",
        "predictions = model.predict(X_test)"
      ],
      "metadata": {
        "id": "wi-4qHBdOGgU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(accuracy_score(y_test, predictions))\n",
        "print(confusion_matrix(y_test, predictions))\n",
        "print(classification_report(y_test, predictions))\n",
        "#We have %100 procent accuracy although we have just used the main components of the data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7fEYK0ftOJTT",
        "outputId": "ba653473-f1c3-488f-8670-6de50a3e0aec"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.9635036496350365\n",
            "[[77  2]\n",
            " [ 3 55]]\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.96      0.97      0.97        79\n",
            "           1       0.96      0.95      0.96        58\n",
            "\n",
            "    accuracy                           0.96       137\n",
            "   macro avg       0.96      0.96      0.96       137\n",
            "weighted avg       0.96      0.96      0.96       137\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_set, y_set = X_train, y_train\n",
        "X1, X2 = np.meshgrid(np.arange(start = X_set[:, 0].min() - 1, stop = X_set[:, 0].max() + 1, step = 0.01),\n",
        "                     np.arange(start = X_set[:, 1].min() - 1, stop = X_set[:, 1].max() + 1, step = 0.01))\n",
        "plt.contourf(X1, X2, model.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),\n",
        "             alpha = 0.75, cmap = ListedColormap(('red', 'blue', 'yellow')))\n",
        "plt.xlim(X1.min(), X1.max())\n",
        "plt.ylim(X2.min(), X2.max())\n",
        "for i, j in enumerate(np.unique(y_set)):\n",
        "    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],\n",
        "                c = ListedColormap(('red', 'blue', 'yellow'))(i), label = j)\n",
        "plt.title('Logistic Regression (Training set)')\n",
        "plt.xlabel('PC1')\n",
        "plt.ylabel('PC2')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 527
        },
        "id": "rlfrVdTcOSfk",
        "outputId": "cba6ef12-d773-4830-b68c-6e8780f84ab1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-61-a623602fd417>:9: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
            "  plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_set, y_set = X_test, y_test\n",
        "X1, X2 = np.meshgrid(np.arange(start = X_set[:, 0].min() - 1, stop = X_set[:, 0].max() + 1, step = 0.01),\n",
        "                     np.arange(start = X_set[:, 1].min() - 1, stop = X_set[:, 1].max() + 1, step = 0.01))\n",
        "plt.contourf(X1, X2, model.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),\n",
        "             alpha = 0.75, cmap = ListedColormap(('red', 'blue', 'yellow')))\n",
        "plt.xlim(X1.min(), X1.max())\n",
        "plt.ylim(X2.min(), X2.max())\n",
        "for i, j in enumerate(np.unique(y_set)):\n",
        "    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],\n",
        "                c = ListedColormap(('red', 'blue', 'yellow'))(i), label = j)\n",
        "plt.title('Logistic Regression (Test set)')\n",
        "plt.xlabel('PC1')\n",
        "plt.ylabel('PC2')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 527
        },
        "id": "lEHGYqegOUDl",
        "outputId": "63dffcd0-5a3a-4ca5-85dc-5d5d19523291"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-62-80dd0398dada>:9: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
            "  plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **KPCA_101 + Logistic Regression**"
      ],
      "metadata": {
        "id": "rCBenBQSOW5E"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "X_train, X_test, y_train, y_test =train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "print(X_train.shape)\n",
        "print(X_test.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uW0LDy1AOVyg",
        "outputId": "1a6a7f40-6c38-4912-aecb-df5f86ba6b35"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(546, 9)\n",
            "(137, 9)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "kpca= KernelPCA(n_components=2, kernel = 'rbf')\n",
        "X_train = kpca.fit_transform(X_train)\n",
        "X_test = kpca.transform(X_test)\n",
        "\n",
        "print(X_train.shape)\n",
        "print(X_test.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "h_NwcClHOeLT",
        "outputId": "bac9c374-8b5d-41e6-a0a1-c3f7e0a6860d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(546, 2)\n",
            "(137, 2)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model = LogisticRegression()\n",
        "model.fit(X_train,y_train)\n",
        "predictions = model.predict(X_test)\n",
        "\n",
        "print(accuracy_score(y_test, predictions))\n",
        "print(confusion_matrix(y_test, predictions))\n",
        "print(classification_report(y_test, predictions))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aogtF72vOfIq",
        "outputId": "29c1b5c0-8faa-42ac-9bef-7e4a01c23828"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.9635036496350365\n",
            "[[77  2]\n",
            " [ 3 55]]\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.96      0.97      0.97        79\n",
            "           1       0.96      0.95      0.96        58\n",
            "\n",
            "    accuracy                           0.96       137\n",
            "   macro avg       0.96      0.96      0.96       137\n",
            "weighted avg       0.96      0.96      0.96       137\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_set, y_set = X_train, y_train\n",
        "X1, X2 = np.meshgrid(np.arange(start = X_set[:, 0].min() - 1, stop = X_set[:, 0].max() + 1, step = 0.01),\n",
        "                     np.arange(start = X_set[:, 1].min() - 1, stop = X_set[:, 1].max() + 1, step = 0.01))\n",
        "plt.contourf(X1, X2, model.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),\n",
        "             alpha = 0.75, cmap = ListedColormap(('red', 'black', 'blue')))\n",
        "plt.xlim(X1.min(), X1.max())\n",
        "plt.ylim(X2.min(), X2.max())\n",
        "for i, j in enumerate(np.unique(y_set)):\n",
        "    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],\n",
        "                c = ListedColormap(('red', 'black', 'blue'))(i), label = j)\n",
        "plt.title('Logistic Regression (Training set)')\n",
        "plt.xlabel('PC1')\n",
        "plt.ylabel('PC2')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "vOTy8NTQOhuk",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 527
        },
        "outputId": "82804fe1-7ee4-47da-b0c4-67761fea327e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-66-422034ce0744>:9: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
            "  plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_set, y_set = X_test, y_test\n",
        "X1, X2 = np.meshgrid(np.arange(start = X_set[:, 0].min() - 1, stop = X_set[:, 0].max() + 1, step = 0.01),\n",
        "                     np.arange(start = X_set[:, 1].min() - 1, stop = X_set[:, 1].max() + 1, step = 0.01))\n",
        "plt.contourf(X1, X2, model.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),\n",
        "             alpha = 0.75, cmap = ListedColormap(('red', 'black', 'blue')))\n",
        "plt.xlim(X1.min(), X1.max())\n",
        "plt.ylim(X2.min(), X2.max())\n",
        "for i, j in enumerate(np.unique(y_set)):\n",
        "    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],\n",
        "                c = ListedColormap(('red', 'black', 'blue'))(i), label = j)\n",
        "plt.title('Logistic Regression (Test set)')\n",
        "plt.xlabel('PC1')\n",
        "plt.ylabel('PC2')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "8V52wDf5Ojem",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 527
        },
        "outputId": "58f1a7d5-77cb-416b-8802-43c5fcf04b7d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-67-ce633a8ddc04>:9: UserWarning: *c* argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with *x* & *y*.  Please use the *color* keyword-argument or provide a 2D array with a single row if you intend to specify the same RGB or RGBA value for all points.\n",
            "  plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}